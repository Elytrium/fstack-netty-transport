From f03ecdc1f9d492862de0d776d95d8a79e8cb3605 Mon Sep 17 00:00:00 2001
From: Petr Ilin <hevav@hevav.dev>
Date: Mon, 25 Apr 2022 20:32:56 +0300
Subject: [PATCH] groupId moved


diff --git a/pom.xml b/pom.xml
index 6453ed0545..68c4381447 100644
--- a/pom.xml
+++ b/pom.xml
@@ -23,12 +23,12 @@
     <version>9</version>
   </parent>
 
-  <groupId>io.netty</groupId>
-  <artifactId>netty-parent</artifactId>
+  <groupId>net.elytrium.fstack-netty-transport</groupId>
+  <artifactId>parent</artifactId>
   <packaging>pom</packaging>
   <version>4.1.77.Final-SNAPSHOT</version>
 
-  <name>Netty</name>
+  <name>F-Stack Netty Transport</name>
   <url>https://netty.io/</url>
   <description>
     Netty is an asynchronous event-driven network application framework for
@@ -49,12 +49,14 @@
   </licenses>
   <inceptionYear>2008</inceptionYear>
 
+  <!--
   <scm>
     <url>https://github.com/netty/netty</url>
     <connection>scm:git:git://github.com/netty/netty.git</connection>
     <developerConnection>scm:git:ssh://git@github.com/netty/netty.git</developerConnection>
     <tag>HEAD</tag>
   </scm>
+  -->
 
   <developers>
     <developer>
@@ -389,14 +391,15 @@
       </activation>
     </profile>
 
+    <!--
     <profile>
       <id>boringssl-mac-aarch64</id>
       <activation>
         <os>
-          <!--
+          __COMMENT_START__
            Automatically active on mac with aarch64 as we only release static boringssl version of
            netty-tcnative for it.
-         -->
+          __COMMENT_END__
           <family>mac</family>
           <arch>aarch64</arch>
         </os>
@@ -409,10 +412,10 @@
     <profile>
       <id>boringssl</id>
       <activation>
-        <!--
+          __COMMENT_START__
           Automatically active on windows as we only release static boringssl version of
           netty-tcnative for windows.
-        -->
+          __COMMENT_END__
         <os>
           <family>windows</family>
         </os>
@@ -422,6 +425,7 @@
         <tcnative.classifier />
       </properties>
     </profile>
+    -->
     <profile>
       <id>leak</id>
       <properties>
@@ -513,6 +517,8 @@
   </profiles>
 
   <properties>
+    <netty.groupId>io.netty</netty.groupId>
+
     <maven.compiler.source>1.6</maven.compiler.source>
     <maven.compiler.target>1.6</maven.compiler.target>
     <netty.dev.tools.directory>${project.build.directory}/dev-tools</netty.dev.tools.directory>
@@ -569,6 +575,7 @@
   </properties>
 
   <modules>
+    <!--
     <module>all</module>
     <module>dev-tools</module>
     <module>common</module>
@@ -590,12 +597,14 @@
     <module>resolver-dns-classes-macos</module>
     <module>resolver-dns-native-macos</module>
     <module>transport</module>
+    -->
     <module>transport-native-unix-common-tests</module>
     <module>transport-native-unix-common</module>
     <module>transport-classes-epoll</module>
     <module>transport-native-epoll</module>
     <module>transport-classes-kqueue</module>
     <module>transport-native-kqueue</module>
+    <!--
     <module>transport-rxtx</module>
     <module>transport-sctp</module>
     <module>transport-udt</module>
@@ -614,6 +623,7 @@
     <module>transport-blockhound-tests</module>
     <module>microbench</module>
     <module>bom</module>
+    -->
   </modules>
 
   <dependencyManagement>
@@ -627,7 +637,7 @@
       </dependency>
 
       <dependency>
-        <groupId>${project.groupId}</groupId>
+        <groupId>${netty.groupId}</groupId>
         <artifactId>netty-dev-tools</artifactId>
         <version>${project.version}</version>
       </dependency>
@@ -675,6 +685,7 @@
       </dependency>
 
       <!-- Our own Tomcat Native fork - completely optional for the native lib, used for accelerating SSL with OpenSSL. -->
+      <!--
       <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>netty-tcnative-classes</artifactId>
@@ -690,6 +701,7 @@
         <scope>runtime</scope>
         <optional>true</optional>
       </dependency>
+      -->
 
       <!-- Conscrypt - needed for running tests, used for accelerating SSL with OpenSSL. -->
       <dependency>
@@ -891,7 +903,7 @@
         <scope>test</scope>
       </dependency>
       <dependency>
-        <groupId>${project.groupId}</groupId>
+        <groupId>${netty.groupId}</groupId>
         <artifactId>netty-build-common</artifactId>
         <version>${netty.build.version}</version>
         <scope>test</scope>
@@ -1033,7 +1045,7 @@
       <scope>test</scope>
     </dependency>
     <dependency>
-      <groupId>${project.groupId}</groupId>
+      <groupId>${netty.groupId}</groupId>
       <artifactId>netty-build-common</artifactId>
       <scope>test</scope>
     </dependency>
@@ -1166,7 +1178,6 @@
             <ignoreMissingClassesByRegularExpressions>
               <!-- ignore everything which is not part of netty itself as the plugin can not handle optional dependencies -->
               <ignoreMissingClassesByRegularExpression>^(?!io\.netty\.).*</ignoreMissingClassesByRegularExpression>
-              <ignoreMissingClassesByRegularExpression>^io\.netty\.internal\.tcnative\..*</ignoreMissingClassesByRegularExpression>
             </ignoreMissingClassesByRegularExpressions>
             <excludes>
               <exclude>@io.netty.util.internal.UnstableApi</exclude>
@@ -1326,7 +1337,7 @@
             <version>8.29</version>
           </dependency>
           <dependency>
-            <groupId>${project.groupId}</groupId>
+            <groupId>${netty.groupId}</groupId>
             <artifactId>netty-build-common</artifactId>
             <version>${netty.build.version}</version>
           </dependency>
@@ -1430,7 +1441,7 @@
                 <supportedProjectType>bundle</supportedProjectType>
               </supportedProjectTypes>
               <instructions>
-                <Export-Package>${project.groupId}.*</Export-Package>
+                <Export-Package>${netty.groupId}.*</Export-Package>
                 <!-- enforce JVM vendor package as optional -->
                 <Import-Package>sun.misc.*;resolution:=optional,sun.nio.ch;resolution:=optional,sun.security.*;resolution:=optional,org.eclipse.jetty.npn;version="[1,2)";resolution:=optional,org.eclipse.jetty.alpn;version="[1,2)";resolution:=optional,*</Import-Package>
                 <!-- override "internal" private package convention -->
@@ -1466,10 +1477,10 @@
             <manifestEntries>
               <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
               <Bundle-Name>${project.name}</Bundle-Name>
-              <Bundle-SymbolicName>${project.groupId}.${project.artifactId}.source</Bundle-SymbolicName>
+              <Bundle-SymbolicName>${netty.groupId}.${project.artifactId}.source</Bundle-SymbolicName>
               <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
               <Bundle-Version>${parsedVersion.osgiVersion}</Bundle-Version>
-              <Eclipse-SourceBundle>${project.groupId}.${project.artifactId};version="${parsedVersion.osgiVersion}";roots:="."</Eclipse-SourceBundle>
+              <Eclipse-SourceBundle>${netty.groupId}.${project.artifactId};version="${parsedVersion.osgiVersion}";roots:="."</Eclipse-SourceBundle>
             </manifestEntries>
           </archive>
         </configuration>
@@ -1593,7 +1604,7 @@
                 <property name="metaInfDir" value="${project.basedir}/src/main/resources/META-INF" />
                 -->
                 <property name="metaInfDir" value="${project.build.outputDirectory}/META-INF" />
-                <property name="versionPropFile" value="${metaInfDir}/${project.groupId}.versions.properties" />
+                <property name="versionPropFile" value="${metaInfDir}/${netty.groupId}.versions.properties" />
                 <mkdir dir="${metaInfDir}" />
                 <delete file="${versionPropFile}" quiet="true" />
 
diff --git a/transport-classes-epoll/pom.xml b/transport-classes-epoll/pom.xml
index 09f96a2819..c64478063e 100644
--- a/transport-classes-epoll/pom.xml
+++ b/transport-classes-epoll/pom.xml
@@ -17,17 +17,17 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
-    <groupId>io.netty</groupId>
-    <artifactId>netty-parent</artifactId>
+    <groupId>net.elytrium.fstack-netty-transport</groupId>
+    <artifactId>parent</artifactId>
     <version>4.1.77.Final-SNAPSHOT</version>
   </parent>
   <artifactId>netty-transport-classes-epoll</artifactId>
 
-  <name>Netty/Transport/Classes/Epoll</name>
+  <name>Netty/Transport/Classes/F-Stack-Epoll</name>
   <packaging>jar</packaging>
 
   <properties>
-    <javaModuleName>io.netty.transport.classes.epoll</javaModuleName>
+    <javaModuleName>net.elytrium.fstack-netty-transport.epoll</javaModuleName>
   </properties>
 
   <dependencies>
@@ -47,7 +47,7 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-native-unix-common</artifactId>
       <version>${project.version}</version>
     </dependency>
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollChannel.java
similarity index 98%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollChannel.java
index baaee987e4..131e5cafe6 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -34,10 +34,10 @@ import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.socket.ChannelInputShutdownEvent;
 import io.netty.channel.socket.ChannelInputShutdownReadComplete;
 import io.netty.channel.socket.SocketChannelConfig;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.Socket;
-import io.netty.channel.unix.UnixChannel;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.UnixChannel;
 import io.netty.util.ReferenceCountUtil;
 import io.netty.util.concurrent.Future;
 
@@ -53,7 +53,7 @@ import java.nio.channels.UnresolvedAddressException;
 import java.util.concurrent.TimeUnit;
 
 import static io.netty.channel.internal.ChannelUtils.WRITE_STATUS_SNDBUF_FULL;
-import static io.netty.channel.unix.UnixChannelUtil.computeRemoteAddr;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelUtil.computeRemoteAddr;
 import static io.netty.util.internal.ObjectUtil.checkNotNull;
 
 abstract class AbstractEpollChannel extends AbstractChannel implements UnixChannel {
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollServerChannel.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollServerChannel.java
index 4852b9d1a3..6f3ad8d8f2 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollServerChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollServerChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelConfig;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollStreamChannel.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollStreamChannel.java
index 0b7044bb8f..984fff822d 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/AbstractEpollStreamChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -31,10 +31,10 @@ import io.netty.channel.FileRegion;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.internal.ChannelUtils;
 import io.netty.channel.socket.DuplexChannel;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.SocketWritableByteChannel;
-import io.netty.channel.unix.UnixChannelUtil;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.SocketWritableByteChannel;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelUtil;
 import io.netty.util.internal.PlatformDependent;
 import io.netty.util.internal.StringUtil;
 import io.netty.util.internal.UnstableApi;
@@ -51,7 +51,7 @@ import java.util.concurrent.Executor;
 
 import static io.netty.channel.internal.ChannelUtils.MAX_BYTES_PER_GATHERING_WRITE_ATTEMPTED_LOW_THRESHOLD;
 import static io.netty.channel.internal.ChannelUtils.WRITE_STATUS_SNDBUF_FULL;
-import static io.netty.channel.unix.FileDescriptor.pipe;
+import static net.elytrium.netty.transport.fstack.unix.FileDescriptor.pipe;
 import static io.netty.util.internal.ObjectUtil.checkNotNull;
 import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;
 
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Epoll.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/Epoll.java
similarity index 97%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/Epoll.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/Epoll.java
index 69620b12a4..2141815939 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Epoll.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/Epoll.java
@@ -13,10 +13,10 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.ChannelOption;
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import io.netty.util.internal.SystemPropertyUtil;
 
 /**
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelConfig.java
similarity index 96%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelConfig.java
index 03c5ce8cb8..86723e6b75 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -22,15 +22,15 @@ import io.netty.channel.DefaultChannelConfig;
 import io.netty.channel.MessageSizeEstimator;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.WriteBufferWaterMark;
-import io.netty.channel.unix.IntegerUnixChannelOption;
-import io.netty.channel.unix.RawUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.IntegerUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.RawUnixChannelOption;
 import io.netty.util.internal.ObjectUtil;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.Map;
 
-import static io.netty.channel.unix.Limits.SSIZE_MAX;
+import static net.elytrium.netty.transport.fstack.unix.Limits.SSIZE_MAX;
 
 public class EpollChannelConfig extends DefaultChannelConfig {
     private volatile long maxBytesPerGatheringWrite = SSIZE_MAX;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelOption.java
similarity index 96%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelOption.java
index b10938eef4..92cc5f35d6 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollChannelOption.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelOption.java
@@ -13,10 +13,10 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.ChannelOption;
-import io.netty.channel.unix.UnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelOption;
 import java.net.InetAddress;
 import java.util.Map;
 
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannel.java
similarity index 95%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannel.java
index 0ca449b665..35a232dcab 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -28,10 +28,10 @@ import io.netty.channel.DefaultAddressedEnvelope;
 import io.netty.channel.socket.DatagramChannel;
 import io.netty.channel.socket.DatagramPacket;
 import io.netty.channel.socket.InternetProtocolFamily;
-import io.netty.channel.unix.Errors;
-import io.netty.channel.unix.Errors.NativeIoException;
-import io.netty.channel.unix.Socket;
-import io.netty.channel.unix.UnixChannelUtil;
+import net.elytrium.netty.transport.fstack.unix.Errors;
+import net.elytrium.netty.transport.fstack.unix.Errors.NativeIoException;
+import net.elytrium.netty.transport.fstack.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelUtil;
 import io.netty.util.ReferenceCountUtil;
 import io.netty.util.UncheckedBooleanSupplier;
 import io.netty.util.internal.ObjectUtil;
@@ -47,7 +47,7 @@ import java.net.PortUnreachableException;
 import java.net.SocketAddress;
 import java.nio.ByteBuffer;
 
-import static io.netty.channel.epoll.LinuxSocket.newSocketDgram;
+import static net.elytrium.netty.transport.fstack.epoll.LinuxSocket.newSocketDgram;
 
 /**
  * {@link DatagramChannel} implementation that uses linux EPOLL Edge-Triggered Mode for
@@ -66,7 +66,7 @@ public final class EpollDatagramChannel extends AbstractEpollChannel implements
     private volatile boolean connected;
 
     /**
-     * Returns {@code true} if {@link io.netty.channel.unix.SegmentedDatagramPacket} is supported natively.
+     * Returns {@code true} if {@link net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket} is supported natively.
      *
      * @return {@code true} if supported, {@code false} otherwise.
      */
@@ -309,7 +309,7 @@ public final class EpollDatagramChannel extends AbstractEpollChannel implements
                 // Check if sendmmsg(...) is supported which is only the case for GLIBC 2.14+
                 if (Native.IS_SUPPORTING_SENDMMSG && in.size() > 1 ||
                         // We only handle UDP_SEGMENT in sendmmsg.
-                        in.current() instanceof io.netty.channel.unix.SegmentedDatagramPacket) {
+                        in.current() instanceof net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) {
                     NativeDatagramPacketArray array = cleanDatagramPacketArray();
                     array.add(in, isConnected(), maxMessagesPerWrite);
                     int cnt = array.count();
@@ -387,12 +387,12 @@ public final class EpollDatagramChannel extends AbstractEpollChannel implements
 
     @Override
     protected Object filterOutboundMessage(Object msg) {
-        if (msg instanceof io.netty.channel.unix.SegmentedDatagramPacket) {
+        if (msg instanceof net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) {
             if (!Native.IS_SUPPORTING_UDP_SEGMENT) {
                 throw new UnsupportedOperationException(
                         "unsupported message type: " + StringUtil.simpleClassName(msg) + EXPECTED_TYPES);
             }
-            io.netty.channel.unix.SegmentedDatagramPacket packet = (io.netty.channel.unix.SegmentedDatagramPacket) msg;
+            net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket packet = (net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) msg;
             ByteBuf content = packet.content();
             return UnixChannelUtil.isBufferCopyNeededForWrite(content) ?
                     packet.replace(newDirectBuffer(packet, content)) : msg;
@@ -579,9 +579,9 @@ public final class EpollDatagramChannel extends AbstractEpollChannel implements
 
     private static void addDatagramPacketToOut(DatagramPacket packet,
                                               RecyclableArrayList out) {
-        if (packet instanceof io.netty.channel.unix.SegmentedDatagramPacket) {
-            io.netty.channel.unix.SegmentedDatagramPacket segmentedDatagramPacket =
-                    (io.netty.channel.unix.SegmentedDatagramPacket) packet;
+        if (packet instanceof net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) {
+            net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket segmentedDatagramPacket =
+                    (net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) packet;
             ByteBuf content = segmentedDatagramPacket.content();
             InetSocketAddress recipient = segmentedDatagramPacket.recipient();
             InetSocketAddress sender = segmentedDatagramPacket.sender();
@@ -647,7 +647,7 @@ public final class EpollDatagramChannel extends AbstractEpollChannel implements
             byteBuf.writerIndex(bytesReceived);
             InetSocketAddress local = localAddress();
             DatagramPacket packet = msg.newDatagramPacket(byteBuf, local);
-            if (!(packet instanceof io.netty.channel.unix.SegmentedDatagramPacket)) {
+            if (!(packet instanceof net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket)) {
                 processPacket(pipeline(), allocHandle, bytesReceived, packet);
                 byteBuf = null;
             } else {
@@ -697,7 +697,7 @@ public final class EpollDatagramChannel extends AbstractEpollChannel implements
             if (received == 1) {
                 // Single packet fast-path
                 DatagramPacket packet = packets[0].newDatagramPacket(byteBuf, local);
-                if (!(packet instanceof io.netty.channel.unix.SegmentedDatagramPacket)) {
+                if (!(packet instanceof net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket)) {
                     processPacket(pipeline(), allocHandle, datagramSize, packet);
                     byteBuf = null;
                     return true;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelConfig.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelConfig.java
index 66d1d7fb06..dcc7407990 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramChannel.java
similarity index 95%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramChannel.java
index 09fe483ed6..2714e0c4d2 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -22,14 +22,14 @@ import io.netty.channel.ChannelMetadata;
 import io.netty.channel.ChannelOutboundBuffer;
 import io.netty.channel.ChannelPipeline;
 import io.netty.channel.DefaultAddressedEnvelope;
-import io.netty.channel.unix.DomainDatagramChannel;
-import io.netty.channel.unix.DomainDatagramChannelConfig;
-import io.netty.channel.unix.DomainDatagramPacket;
-import io.netty.channel.unix.DomainDatagramSocketAddress;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.UnixChannelUtil;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannel;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannelConfig;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelUtil;
 import io.netty.util.CharsetUtil;
 import io.netty.util.UncheckedBooleanSupplier;
 import io.netty.util.internal.StringUtil;
@@ -39,7 +39,7 @@ import java.io.IOException;
 import java.net.SocketAddress;
 import java.nio.ByteBuffer;
 
-import static io.netty.channel.epoll.LinuxSocket.newSocketDomainDgram;
+import static net.elytrium.netty.transport.fstack.epoll.LinuxSocket.newSocketDomainDgram;
 
 @UnstableApi
 public final class EpollDomainDatagramChannel extends AbstractEpollChannel implements DomainDatagramChannel {
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramChannelConfig.java
similarity index 97%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramChannelConfig.java
index 91b37de3c4..9d7309ae98 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -22,7 +22,7 @@ import io.netty.channel.FixedRecvByteBufAllocator;
 import io.netty.channel.MessageSizeEstimator;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.WriteBufferWaterMark;
-import io.netty.channel.unix.DomainDatagramChannelConfig;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannelConfig;
 import io.netty.util.internal.UnstableApi;
 
 import java.io.IOException;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketChannel.java
similarity index 93%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketChannel.java
index 02b6d6025f..69f37d6522 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketChannel.java
@@ -13,22 +13,22 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelConfig;
 import io.netty.channel.ChannelOutboundBuffer;
 import io.netty.channel.ChannelPipeline;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.DomainSocketChannel;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketChannel;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
 import io.netty.util.internal.UnstableApi;
 
 import java.io.IOException;
 import java.net.SocketAddress;
 
-import static io.netty.channel.epoll.LinuxSocket.newSocketDomain;
+import static net.elytrium.netty.transport.fstack.epoll.LinuxSocket.newSocketDomain;
 
 public final class EpollDomainSocketChannel extends AbstractEpollStreamChannel implements DomainSocketChannel {
     private final EpollDomainSocketChannelConfig config = new EpollDomainSocketChannelConfig(this);
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketChannelConfig.java
similarity index 95%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketChannelConfig.java
index 407e2ca398..2305204b3f 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelOption;
@@ -21,8 +21,8 @@ import io.netty.channel.MessageSizeEstimator;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.WriteBufferWaterMark;
 import io.netty.channel.socket.DuplexChannelConfig;
-import io.netty.channel.unix.DomainSocketChannelConfig;
-import io.netty.channel.unix.DomainSocketReadMode;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketChannelConfig;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketReadMode;
 import io.netty.util.internal.ObjectUtil;
 
 import java.io.IOException;
@@ -31,7 +31,7 @@ import java.util.Map;
 import static io.netty.channel.ChannelOption.ALLOW_HALF_CLOSURE;
 import static io.netty.channel.ChannelOption.SO_RCVBUF;
 import static io.netty.channel.ChannelOption.SO_SNDBUF;
-import static io.netty.channel.unix.UnixChannelOption.DOMAIN_SOCKET_READ_MODE;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelOption.DOMAIN_SOCKET_READ_MODE;
 
 public final class EpollDomainSocketChannelConfig extends EpollChannelConfig
         implements DomainSocketChannelConfig, DuplexChannelConfig {
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventArray.java
similarity index 97%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventArray.java
index 6c8067988f..dff7d59ad1 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventArray.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventArray.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
 import io.netty.util.internal.PlatformDependent;
 import io.netty.util.internal.UnstableApi;
 
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoop.java
similarity index 98%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoop.java
index 4a58c60fcd..a2c51e2b3a 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoop.java
@@ -13,16 +13,16 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.EventLoop;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.EventLoopTaskQueueFactory;
 import io.netty.channel.SelectStrategy;
 import io.netty.channel.SingleThreadEventLoop;
-import io.netty.channel.epoll.AbstractEpollChannel.AbstractEpollUnsafe;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.IovArray;
+import net.elytrium.netty.transport.fstack.epoll.AbstractEpollChannel.AbstractEpollUnsafe;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
 import io.netty.util.IntSupplier;
 import io.netty.util.collection.IntObjectHashMap;
 import io.netty.util.collection.IntObjectMap;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoopGroup.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoopGroup.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoopGroup.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoopGroup.java
index 07488895ee..cdf6273461 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoopGroup.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoopGroup.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.DefaultSelectStrategyFactory;
 import io.netty.channel.EventLoop;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollMode.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollMode.java
similarity index 95%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollMode.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollMode.java
index 32474a6265..ee4116ec1b 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollMode.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollMode.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 /**
  * The <a href="https://linux.die.net//man/7/epoll">epoll</a> mode to use.
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorHandle.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollRecvByteAllocatorHandle.java
similarity index 96%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorHandle.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollRecvByteAllocatorHandle.java
index dc5a0b9979..ccb71e3ca1 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorHandle.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollRecvByteAllocatorHandle.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.RecvByteBufAllocator.DelegatingHandle;
 import io.netty.channel.RecvByteBufAllocator.ExtendedHandle;
-import io.netty.channel.unix.PreferredDirectByteBufAllocator;
+import net.elytrium.netty.transport.fstack.unix.PreferredDirectByteBufAllocator;
 import io.netty.util.UncheckedBooleanSupplier;
 
 class EpollRecvByteAllocatorHandle extends DelegatingHandle implements ExtendedHandle {
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollRecvByteAllocatorStreamingHandle.java
similarity index 96%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollRecvByteAllocatorStreamingHandle.java
index 0a43992411..b0c8ab923b 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollRecvByteAllocatorStreamingHandle.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollRecvByteAllocatorStreamingHandle.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.RecvByteBufAllocator;
 
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerChannelConfig.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerChannelConfig.java
index 3f8fe19d60..55ab6f91a2 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerDomainSocketChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerDomainSocketChannel.java
similarity index 90%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerDomainSocketChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerDomainSocketChannel.java
index 0f06c7f9e9..10d80cdb31 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerDomainSocketChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerDomainSocketChannel.java
@@ -13,19 +13,19 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.Channel;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.ServerDomainSocketChannel;
-import io.netty.channel.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.ServerDomainSocketChannel;
+import net.elytrium.netty.transport.fstack.unix.Socket;
 import io.netty.util.internal.logging.InternalLogger;
 import io.netty.util.internal.logging.InternalLoggerFactory;
 
 import java.io.File;
 import java.net.SocketAddress;
 
-import static io.netty.channel.epoll.LinuxSocket.newSocketDomain;
+import static net.elytrium.netty.transport.fstack.epoll.LinuxSocket.newSocketDomain;
 
 public final class EpollServerDomainSocketChannel extends AbstractEpollServerChannel
         implements ServerDomainSocketChannel {
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannel.java
similarity index 91%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannel.java
index a2f188d221..9b66f4384f 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.Channel;
 import io.netty.channel.EventLoop;
@@ -28,9 +28,9 @@ import java.util.Collection;
 import java.util.Collections;
 import java.util.Map;
 
-import static io.netty.channel.epoll.LinuxSocket.newSocketStream;
-import static io.netty.channel.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_SERVER;
-import static io.netty.channel.unix.NativeInetAddress.address;
+import static net.elytrium.netty.transport.fstack.epoll.LinuxSocket.newSocketStream;
+import static net.elytrium.netty.transport.fstack.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_SERVER;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.address;
 
 /**
  * {@link ServerSocketChannel} implementation that uses linux EPOLL Edge-Triggered Mode for
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannelConfig.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannelConfig.java
index 014604e1db..f0e38696d4 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannel.java
similarity index 96%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannel.java
index ea06b4a1fd..b4e18be140 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.Channel;
@@ -33,8 +33,8 @@ import java.util.Collections;
 import java.util.Map;
 import java.util.concurrent.Executor;
 
-import static io.netty.channel.epoll.LinuxSocket.newSocketStream;
-import static io.netty.channel.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_CLIENT;
+import static net.elytrium.netty.transport.fstack.epoll.LinuxSocket.newSocketStream;
+import static net.elytrium.netty.transport.fstack.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_CLIENT;
 
 /**
  * {@link SocketChannel} implementation that uses linux EPOLL Edge-Triggered Mode for
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannelConfig.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelConfig.java
similarity index 99%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannelConfig.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelConfig.java
index ef341514db..4109b86d4f 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannelConfig.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollTcpInfo.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollTcpInfo.java
similarity index 98%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollTcpInfo.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollTcpInfo.java
index e6e4ab6e0a..ff1152c634 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollTcpInfo.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/EpollTcpInfo.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 /**
  * <p>
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/LinuxSocket.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/LinuxSocket.java
similarity index 98%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/LinuxSocket.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/LinuxSocket.java
index d12e60c66f..fb0ee8ab72 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/LinuxSocket.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/LinuxSocket.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.ChannelException;
 import io.netty.channel.DefaultFileRegion;
-import io.netty.channel.unix.NativeInetAddress;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.NativeInetAddress;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.Socket;
 import io.netty.channel.socket.InternetProtocolFamily;
 import io.netty.util.internal.PlatformDependent;
 import io.netty.util.internal.SocketUtils;
@@ -32,7 +32,7 @@ import java.net.NetworkInterface;
 import java.net.UnknownHostException;
 import java.util.Enumeration;
 
-import static io.netty.channel.unix.Errors.ioResult;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ioResult;
 
 /**
  * A socket which provides access Linux native methods.
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/Native.java
similarity index 89%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/Native.java
index 85829ec15a..fa687cc83e 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/Native.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.DefaultFileRegion;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.Socket;
-import io.netty.channel.unix.Unix;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.Unix;
 import io.netty.util.internal.ClassInitializerUtil;
 import io.netty.util.internal.NativeLibraryLoader;
 import io.netty.util.internal.PlatformDependent;
@@ -31,18 +31,18 @@ import java.io.IOException;
 import java.nio.channels.FileChannel;
 import java.nio.channels.Selector;
 
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.epollerr;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.epollet;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.epollin;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.epollout;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.epollrdhup;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.isSupportingRecvmmsg;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.isSupportingSendmmsg;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.kernelVersion;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.tcpFastopenMode;
-import static io.netty.channel.epoll.NativeStaticallyReferencedJniMethods.tcpMd5SigMaxKeyLen;
-import static io.netty.channel.unix.Errors.ioResult;
-import static io.netty.channel.unix.Errors.newIOException;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.epollerr;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.epollet;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.epollin;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.epollout;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.epollrdhup;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.isSupportingRecvmmsg;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.isSupportingSendmmsg;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.kernelVersion;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.tcpFastopenMode;
+import static net.elytrium.netty.transport.fstack.epoll.NativeStaticallyReferencedJniMethods.tcpMd5SigMaxKeyLen;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ioResult;
+import static net.elytrium.netty.transport.fstack.unix.Errors.newIOException;
 
 /**
  * Native helper methods
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/NativeDatagramPacketArray.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray.java
similarity index 92%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/NativeDatagramPacketArray.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray.java
index 448a131fca..2967f3c348 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/NativeDatagramPacketArray.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray.java
@@ -13,15 +13,15 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.ChannelOutboundBuffer;
 import io.netty.channel.ChannelOutboundBuffer.MessageProcessor;
 import io.netty.channel.socket.DatagramPacket;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.Limits;
-import io.netty.channel.unix.SegmentedDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.Limits;
+import net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket;
 import io.netty.util.internal.UnstableApi;
 
 import java.net.Inet6Address;
@@ -29,8 +29,8 @@ import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.UnknownHostException;
 
-import static io.netty.channel.unix.Limits.UIO_MAX_IOV;
-import static io.netty.channel.unix.NativeInetAddress.copyIpv4MappedIpv6Address;
+import static net.elytrium.netty.transport.fstack.unix.Limits.UIO_MAX_IOV;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.copyIpv4MappedIpv6Address;
 
 /**
  * Support <a href="https://linux.die.net//man/2/sendmmsg">sendmmsg(...)</a> on linux with GLIBC 2.14+
@@ -121,8 +121,8 @@ final class NativeDatagramPacketArray {
                 DatagramPacket packet = (DatagramPacket) msg;
                 ByteBuf buf = packet.content();
                 int segmentSize = 0;
-                if (packet instanceof io.netty.channel.unix.SegmentedDatagramPacket) {
-                    int seg = ((io.netty.channel.unix.SegmentedDatagramPacket) packet).segmentSize();
+                if (packet instanceof net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) {
+                    int seg = ((net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket) packet).segmentSize();
                     // We only need to tell the kernel that we want to use UDP_SEGMENT if there are multiple
                     // segments in the packet.
                     if (buf.readableBytes() > seg) {
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/NativeStaticallyReferencedJniMethods.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/NativeStaticallyReferencedJniMethods.java
similarity index 97%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/NativeStaticallyReferencedJniMethods.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/NativeStaticallyReferencedJniMethods.java
index b52721b26f..f4574ebad4 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/NativeStaticallyReferencedJniMethods.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/NativeStaticallyReferencedJniMethods.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 /**
  * This class is necessary to break the following cyclic dependency:
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/SegmentedDatagramPacket.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/SegmentedDatagramPacket.java
similarity index 92%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/SegmentedDatagramPacket.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/SegmentedDatagramPacket.java
index 50bca1f997..51dc957ff0 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/SegmentedDatagramPacket.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/SegmentedDatagramPacket.java
@@ -13,17 +13,17 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.buffer.ByteBuf;
 
 import java.net.InetSocketAddress;
 
 /**
- * @deprecated use {@link io.netty.channel.unix.SegmentedDatagramPacket}.
+ * @deprecated use {@link net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket}.
  */
 @Deprecated
-public final class SegmentedDatagramPacket extends io.netty.channel.unix.SegmentedDatagramPacket {
+public final class SegmentedDatagramPacket extends net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket {
 
     /**
      * Create a new instance.
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/TcpMd5Util.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/TcpMd5Util.java
similarity index 98%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/TcpMd5Util.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/TcpMd5Util.java
index 5f545db07c..9a43e9aca0 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/TcpMd5Util.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/TcpMd5Util.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import static io.netty.util.internal.ObjectUtil.checkNotNull;
 import static io.netty.util.internal.ObjectUtil.checkNotNullWithIAE;
diff --git a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/package-info.java b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/package-info.java
similarity index 93%
rename from transport-classes-epoll/src/main/java/io/netty/channel/epoll/package-info.java
rename to transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/package-info.java
index 7a96dc1e37..3efd71b428 100644
--- a/transport-classes-epoll/src/main/java/io/netty/channel/epoll/package-info.java
+++ b/transport-classes-epoll/src/main/java/net/elytrium/netty/transport/fstack/epoll/package-info.java
@@ -18,4 +18,4 @@
  * Optimized transport for linux which uses <a href="https://en.wikipedia.org/wiki/Epoll">EPOLL Edge-Triggered Mode</a>
  * for maximal performance.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
diff --git a/transport-classes-kqueue/pom.xml b/transport-classes-kqueue/pom.xml
index 49e2342dbe..d147a41ec3 100644
--- a/transport-classes-kqueue/pom.xml
+++ b/transport-classes-kqueue/pom.xml
@@ -17,17 +17,17 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
-    <groupId>io.netty</groupId>
-    <artifactId>netty-parent</artifactId>
+    <groupId>net.elytrium.fstack-netty-transport</groupId>
+    <artifactId>parent</artifactId>
     <version>4.1.77.Final-SNAPSHOT</version>
   </parent>
   <artifactId>netty-transport-classes-kqueue</artifactId>
 
-  <name>Netty/Transport/Classes/KQueue</name>
+  <name>Netty/Transport/Classes/F-Stack-KQueue</name>
   <packaging>jar</packaging>
 
   <properties>
-    <javaModuleName>io.netty.transport.classes.kqueue</javaModuleName>
+    <javaModuleName>net.elytrium.fstack-netty-transport.kqueue</javaModuleName>
   </properties>
 
   <dependencies>
@@ -47,7 +47,7 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-native-unix-common</artifactId>
       <version>${project.version}</version>
     </dependency>
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueChannel.java
similarity index 99%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueChannel.java
index 30c9be5b51..91d2504ce8 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -34,8 +34,8 @@ import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.socket.ChannelInputShutdownEvent;
 import io.netty.channel.socket.ChannelInputShutdownReadComplete;
 import io.netty.channel.socket.SocketChannelConfig;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.UnixChannel;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.UnixChannel;
 import io.netty.util.ReferenceCountUtil;
 import io.netty.util.concurrent.Future;
 import io.netty.util.internal.UnstableApi;
@@ -52,7 +52,7 @@ import java.nio.channels.UnresolvedAddressException;
 import java.util.concurrent.TimeUnit;
 
 import static io.netty.channel.internal.ChannelUtils.WRITE_STATUS_SNDBUF_FULL;
-import static io.netty.channel.unix.UnixChannelUtil.computeRemoteAddr;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelUtil.computeRemoteAddr;
 import static io.netty.util.internal.ObjectUtil.checkNotNull;
 
 abstract class AbstractKQueueChannel extends AbstractChannel implements UnixChannel {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueDatagramChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueDatagramChannel.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueDatagramChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueDatagramChannel.java
index b55b41f4a0..1df33a1791 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueDatagramChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueDatagramChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelMetadata;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueServerChannel.java
similarity index 98%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueServerChannel.java
index bd7277d490..7d43f4bf51 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueServerChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueServerChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelConfig;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueStreamChannel.java
similarity index 99%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueStreamChannel.java
index dd6db6a265..bc28f81276 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueStreamChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AbstractKQueueStreamChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -30,9 +30,9 @@ import io.netty.channel.EventLoop;
 import io.netty.channel.FileRegion;
 import io.netty.channel.internal.ChannelUtils;
 import io.netty.channel.socket.DuplexChannel;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.SocketWritableByteChannel;
-import io.netty.channel.unix.UnixChannelUtil;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.SocketWritableByteChannel;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelUtil;
 import io.netty.util.internal.StringUtil;
 import io.netty.util.internal.UnstableApi;
 import io.netty.util.internal.logging.InternalLogger;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AcceptFilter.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AcceptFilter.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AcceptFilter.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AcceptFilter.java
index 5b390c8d66..6d1af4f078 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AcceptFilter.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/AcceptFilter.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.util.internal.ObjectUtil;
 import io.netty.util.internal.UnstableApi;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/BsdSocket.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/BsdSocket.java
similarity index 93%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/BsdSocket.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/BsdSocket.java
index 97fe4a43c5..a3838420f2 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/BsdSocket.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/BsdSocket.java
@@ -13,24 +13,24 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.DefaultFileRegion;
 import io.netty.channel.socket.InternetProtocolFamily;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.Socket;
 
 import java.io.IOException;
 import java.net.Inet6Address;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 
-import static io.netty.channel.kqueue.AcceptFilter.PLATFORM_UNSUPPORTED;
-import static io.netty.channel.kqueue.Native.CONNECT_TCP_FASTOPEN;
-import static io.netty.channel.unix.Errors.ERRNO_EINPROGRESS_NEGATIVE;
-import static io.netty.channel.unix.Errors.ioResult;
-import static io.netty.channel.unix.NativeInetAddress.ipv4MappedIpv6Address;
+import static net.elytrium.netty.transport.fstack.kqueue.AcceptFilter.PLATFORM_UNSUPPORTED;
+import static net.elytrium.netty.transport.fstack.kqueue.Native.CONNECT_TCP_FASTOPEN;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ERRNO_EINPROGRESS_NEGATIVE;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ioResult;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.ipv4MappedIpv6Address;
 import static io.netty.util.internal.ObjectUtil.checkNotNull;
 
 /**
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueue.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueue.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueue.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueue.java
index c5ba0bb05a..a1496aec1c 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueue.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueue.java
@@ -13,10 +13,10 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.ChannelOption;
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import io.netty.util.internal.SystemPropertyUtil;
 import io.netty.util.internal.UnstableApi;
 
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelConfig.java
similarity index 94%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelConfig.java
index 4f5ff99e3c..00b6c2acf2 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -22,16 +22,16 @@ import io.netty.channel.DefaultChannelConfig;
 import io.netty.channel.MessageSizeEstimator;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.WriteBufferWaterMark;
-import io.netty.channel.unix.IntegerUnixChannelOption;
-import io.netty.channel.unix.RawUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.IntegerUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.RawUnixChannelOption;
 import io.netty.util.internal.UnstableApi;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.Map;
 
-import static io.netty.channel.kqueue.KQueueChannelOption.RCV_ALLOC_TRANSPORT_PROVIDES_GUESS;
-import static io.netty.channel.unix.Limits.SSIZE_MAX;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueChannelOption.RCV_ALLOC_TRANSPORT_PROVIDES_GUESS;
+import static net.elytrium.netty.transport.fstack.unix.Limits.SSIZE_MAX;
 import static java.lang.Math.min;
 
 @UnstableApi
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelOption.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelOption.java
similarity index 93%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelOption.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelOption.java
index d8242c7371..37f9b7b117 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelOption.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelOption.java
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.ChannelOption;
 import io.netty.channel.RecvByteBufAllocator;
-import io.netty.channel.unix.UnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelOption;
 import io.netty.util.internal.UnstableApi;
 
 @UnstableApi
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramChannel.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramChannel.java
index 7c8dfc9b1a..2356b61388 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -26,10 +26,10 @@ import io.netty.channel.socket.DatagramChannel;
 import io.netty.channel.socket.DatagramChannelConfig;
 import io.netty.channel.socket.DatagramPacket;
 import io.netty.channel.socket.InternetProtocolFamily;
-import io.netty.channel.unix.DatagramSocketAddress;
-import io.netty.channel.unix.Errors;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.UnixChannelUtil;
+import net.elytrium.netty.transport.fstack.unix.DatagramSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.Errors;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelUtil;
 import io.netty.util.UncheckedBooleanSupplier;
 import io.netty.util.internal.ObjectUtil;
 import io.netty.util.internal.StringUtil;
@@ -43,7 +43,7 @@ import java.net.SocketAddress;
 import java.net.SocketException;
 import java.nio.ByteBuffer;
 
-import static io.netty.channel.kqueue.BsdSocket.newSocketDgram;
+import static net.elytrium.netty.transport.fstack.kqueue.BsdSocket.newSocketDgram;
 
 @UnstableApi
 public final class KQueueDatagramChannel extends AbstractKQueueDatagramChannel implements DatagramChannel {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramChannelConfig.java
similarity index 98%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramChannelConfig.java
index ee6b070e66..c9efd5d501 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -40,7 +40,7 @@ import static io.netty.channel.ChannelOption.SO_BROADCAST;
 import static io.netty.channel.ChannelOption.SO_RCVBUF;
 import static io.netty.channel.ChannelOption.SO_REUSEADDR;
 import static io.netty.channel.ChannelOption.SO_SNDBUF;
-import static io.netty.channel.unix.UnixChannelOption.SO_REUSEPORT;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelOption.SO_REUSEPORT;
 
 @UnstableApi
 public final class KQueueDatagramChannelConfig extends KQueueChannelConfig implements DatagramChannelConfig {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramChannel.java
similarity index 94%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramChannel.java
index c8a2488bb2..703c05e1e7 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramChannel.java
@@ -13,21 +13,21 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.AddressedEnvelope;
 import io.netty.channel.ChannelPipeline;
 import io.netty.channel.DefaultAddressedEnvelope;
-import io.netty.channel.unix.DomainDatagramChannel;
-import io.netty.channel.unix.DomainDatagramChannelConfig;
-import io.netty.channel.unix.DomainDatagramPacket;
-import io.netty.channel.unix.DomainDatagramSocketAddress;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.IovArray;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.UnixChannelUtil;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannel;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannelConfig;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.UnixChannelUtil;
 import io.netty.util.CharsetUtil;
 import io.netty.util.UncheckedBooleanSupplier;
 import io.netty.util.internal.StringUtil;
@@ -37,7 +37,7 @@ import java.io.IOException;
 import java.net.SocketAddress;
 import java.nio.ByteBuffer;
 
-import static io.netty.channel.kqueue.BsdSocket.newSocketDomainDgram;
+import static net.elytrium.netty.transport.fstack.kqueue.BsdSocket.newSocketDomainDgram;
 
 @UnstableApi
 public final class KQueueDomainDatagramChannel extends AbstractKQueueDatagramChannel implements DomainDatagramChannel {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramChannelConfig.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramChannelConfig.java
index 55d73e92f7..789a7f91f6 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -22,7 +22,7 @@ import io.netty.channel.FixedRecvByteBufAllocator;
 import io.netty.channel.MessageSizeEstimator;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.WriteBufferWaterMark;
-import io.netty.channel.unix.DomainDatagramChannelConfig;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannelConfig;
 import io.netty.util.internal.UnstableApi;
 
 import java.io.IOException;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketChannel.java
similarity index 93%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketChannel.java
index cf56612ea2..847d551aa7 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketChannel.java
@@ -13,22 +13,22 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelConfig;
 import io.netty.channel.ChannelOutboundBuffer;
 import io.netty.channel.ChannelPipeline;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.DomainSocketChannel;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketChannel;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
 import io.netty.util.internal.UnstableApi;
 
 import java.io.IOException;
 import java.net.SocketAddress;
 
-import static io.netty.channel.kqueue.BsdSocket.newSocketDomain;
+import static net.elytrium.netty.transport.fstack.kqueue.BsdSocket.newSocketDomain;
 
 @UnstableApi
 public final class KQueueDomainSocketChannel extends AbstractKQueueStreamChannel implements DomainSocketChannel {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketChannelConfig.java
similarity index 95%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketChannelConfig.java
index 0a7f3d0215..a9b8c211b9 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelOption;
@@ -21,8 +21,8 @@ import io.netty.channel.MessageSizeEstimator;
 import io.netty.channel.RecvByteBufAllocator;
 import io.netty.channel.WriteBufferWaterMark;
 import io.netty.channel.socket.DuplexChannelConfig;
-import io.netty.channel.unix.DomainSocketChannelConfig;
-import io.netty.channel.unix.DomainSocketReadMode;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketChannelConfig;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketReadMode;
 import io.netty.util.internal.ObjectUtil;
 import io.netty.util.internal.UnstableApi;
 
@@ -32,7 +32,7 @@ import java.util.Map;
 import static io.netty.channel.ChannelOption.ALLOW_HALF_CLOSURE;
 import static io.netty.channel.ChannelOption.SO_RCVBUF;
 import static io.netty.channel.ChannelOption.SO_SNDBUF;
-import static io.netty.channel.unix.UnixChannelOption.DOMAIN_SOCKET_READ_MODE;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelOption.DOMAIN_SOCKET_READ_MODE;
 
 @UnstableApi
 public final class KQueueDomainSocketChannelConfig extends KQueueChannelConfig
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventArray.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventArray.java
similarity index 98%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventArray.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventArray.java
index 787dc9c620..8504bfad2a 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventArray.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventArray.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
-import io.netty.channel.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
 import io.netty.util.internal.PlatformDependent;
 
 import java.nio.ByteBuffer;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoop.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoop.java
similarity index 98%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoop.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoop.java
index 34b854510c..d3c81ed369 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoop.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoop.java
@@ -13,16 +13,16 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.EventLoop;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.EventLoopTaskQueueFactory;
 import io.netty.channel.SelectStrategy;
 import io.netty.channel.SingleThreadEventLoop;
-import io.netty.channel.kqueue.AbstractKQueueChannel.AbstractKQueueUnsafe;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.IovArray;
+import net.elytrium.netty.transport.fstack.kqueue.AbstractKQueueChannel.AbstractKQueueUnsafe;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
 import io.netty.util.IntSupplier;
 import io.netty.util.collection.IntObjectHashMap;
 import io.netty.util.collection.IntObjectMap;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoopGroup.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoopGroup.java
similarity index 99%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoopGroup.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoopGroup.java
index 30c726da50..4d2b5b5fdc 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoopGroup.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoopGroup.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.DefaultSelectStrategyFactory;
 import io.netty.channel.EventLoop;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueRecvByteAllocatorHandle.java
similarity index 96%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueRecvByteAllocatorHandle.java
index cd81d120c8..6ef5ead056 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueRecvByteAllocatorHandle.java
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelConfig;
 import io.netty.channel.RecvByteBufAllocator.DelegatingHandle;
 import io.netty.channel.RecvByteBufAllocator.ExtendedHandle;
-import io.netty.channel.unix.PreferredDirectByteBufAllocator;
+import net.elytrium.netty.transport.fstack.unix.PreferredDirectByteBufAllocator;
 import io.netty.util.UncheckedBooleanSupplier;
 
 import static java.lang.Math.max;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerChannelConfig.java
similarity index 99%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerChannelConfig.java
index 99974c0ce0..cac3113a8c 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerDomainSocketChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerDomainSocketChannel.java
similarity index 91%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerDomainSocketChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerDomainSocketChannel.java
index 75e4dfbe8a..04dc52de08 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerDomainSocketChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerDomainSocketChannel.java
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.Channel;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.ServerDomainSocketChannel;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.ServerDomainSocketChannel;
 import io.netty.util.internal.UnstableApi;
 import io.netty.util.internal.logging.InternalLogger;
 import io.netty.util.internal.logging.InternalLoggerFactory;
@@ -25,7 +25,7 @@ import io.netty.util.internal.logging.InternalLoggerFactory;
 import java.io.File;
 import java.net.SocketAddress;
 
-import static io.netty.channel.kqueue.BsdSocket.newSocketDomain;
+import static net.elytrium.netty.transport.fstack.kqueue.BsdSocket.newSocketDomain;
 
 @UnstableApi
 public final class KQueueServerDomainSocketChannel extends AbstractKQueueServerChannel
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannel.java
similarity index 92%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannel.java
index e55593b997..7fd0edf60c 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.Channel;
 import io.netty.channel.EventLoop;
@@ -23,8 +23,8 @@ import io.netty.util.internal.UnstableApi;
 import java.net.InetSocketAddress;
 import java.net.SocketAddress;
 
-import static io.netty.channel.kqueue.BsdSocket.newSocketStream;
-import static io.netty.channel.unix.NativeInetAddress.address;
+import static net.elytrium.netty.transport.fstack.kqueue.BsdSocket.newSocketStream;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.address;
 
 @UnstableApi
 public final class KQueueServerSocketChannel extends AbstractKQueueServerChannel implements ServerSocketChannel {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannelConfig.java
similarity index 96%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannelConfig.java
index 5fd44dd8b0..a0f5c01a50 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -27,8 +27,8 @@ import io.netty.util.internal.UnstableApi;
 import java.io.IOException;
 import java.util.Map;
 
-import static io.netty.channel.kqueue.KQueueChannelOption.SO_ACCEPTFILTER;
-import static io.netty.channel.unix.UnixChannelOption.SO_REUSEPORT;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueChannelOption.SO_ACCEPTFILTER;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelOption.SO_REUSEPORT;
 
 @UnstableApi
 public class KQueueServerSocketChannelConfig extends KQueueServerChannelConfig {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannel.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannel.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannel.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannel.java
index 486a895f7e..4624a0f0e1 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannel.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.Channel;
@@ -21,7 +21,7 @@ import io.netty.channel.ChannelOutboundBuffer;
 import io.netty.channel.socket.InternetProtocolFamily;
 import io.netty.channel.socket.ServerSocketChannel;
 import io.netty.channel.socket.SocketChannel;
-import io.netty.channel.unix.IovArray;
+import net.elytrium.netty.transport.fstack.unix.IovArray;
 import io.netty.util.concurrent.GlobalEventExecutor;
 import io.netty.util.internal.UnstableApi;
 
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannelConfig.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelConfig.java
similarity index 98%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannelConfig.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelConfig.java
index b74338e99a..94ba87592a 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannelConfig.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelException;
@@ -36,8 +36,8 @@ import static io.netty.channel.ChannelOption.SO_RCVBUF;
 import static io.netty.channel.ChannelOption.SO_REUSEADDR;
 import static io.netty.channel.ChannelOption.SO_SNDBUF;
 import static io.netty.channel.ChannelOption.TCP_NODELAY;
-import static io.netty.channel.kqueue.KQueueChannelOption.SO_SNDLOWAT;
-import static io.netty.channel.kqueue.KQueueChannelOption.TCP_NOPUSH;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueChannelOption.SO_SNDLOWAT;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueChannelOption.TCP_NOPUSH;
 
 @UnstableApi
 public final class KQueueSocketChannelConfig extends KQueueChannelConfig implements SocketChannelConfig {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueStaticallyReferencedJniMethods.java
similarity index 97%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueStaticallyReferencedJniMethods.java
index e4a4a41ce8..3620aad414 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/KQueueStaticallyReferencedJniMethods.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 /**
  * This class is necessary to break the following cyclic dependency:
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/Native.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/Native.java
similarity index 74%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/Native.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/Native.java
index 20a09f49b1..a5e966328b 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/Native.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/Native.java
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.DefaultFileRegion;
-import io.netty.channel.unix.FileDescriptor;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.Unix;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.Unix;
 import io.netty.util.internal.ClassInitializerUtil;
 import io.netty.util.internal.NativeLibraryLoader;
 import io.netty.util.internal.PlatformDependent;
@@ -29,25 +29,25 @@ import io.netty.util.internal.logging.InternalLoggerFactory;
 import java.io.IOException;
 import java.nio.channels.FileChannel;
 
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.connectDataIdempotent;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.connectResumeOnReadWrite;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evAdd;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evClear;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evDelete;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evDisable;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evEOF;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evEnable;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evError;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evfiltRead;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evfiltSock;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evfiltUser;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.evfiltWrite;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.fastOpenClient;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.fastOpenServer;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.noteConnReset;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.noteDisconnected;
-import static io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods.noteReadClosed;
-import static io.netty.channel.unix.Errors.newIOException;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.connectDataIdempotent;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.connectResumeOnReadWrite;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evAdd;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evClear;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evDelete;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evDisable;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evEOF;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evEnable;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evError;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evfiltRead;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evfiltSock;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evfiltUser;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.evfiltWrite;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.fastOpenClient;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.fastOpenServer;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.noteConnReset;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.noteDisconnected;
+import static net.elytrium.netty.transport.fstack.kqueue.KQueueStaticallyReferencedJniMethods.noteReadClosed;
+import static net.elytrium.netty.transport.fstack.unix.Errors.newIOException;
 
 /**
  * Native helper methods
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/NativeLongArray.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/NativeLongArray.java
similarity index 94%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/NativeLongArray.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/NativeLongArray.java
index 5c44c57ca4..e022e43319 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/NativeLongArray.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/NativeLongArray.java
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
-import io.netty.channel.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
 import io.netty.util.internal.PlatformDependent;
 
 import java.nio.ByteBuffer;
 
-import static io.netty.channel.unix.Limits.SIZEOF_JLONG;
+import static net.elytrium.netty.transport.fstack.unix.Limits.SIZEOF_JLONG;
 import static io.netty.util.internal.ObjectUtil.checkPositive;
 
 final class NativeLongArray {
diff --git a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/package-info.java b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/package-info.java
similarity index 93%
rename from transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/package-info.java
rename to transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/package-info.java
index 9d1a25b8f4..05460243ed 100644
--- a/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/package-info.java
+++ b/transport-classes-kqueue/src/main/java/net/elytrium/netty/transport/fstack/kqueue/package-info.java
@@ -18,6 +18,6 @@
  * BSD specific transport.
  */
 @UnstableApi
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.util.internal.UnstableApi;
diff --git a/transport-native-epoll/pom.xml b/transport-native-epoll/pom.xml
index cad13b4b77..1bbddbba49 100644
--- a/transport-native-epoll/pom.xml
+++ b/transport-native-epoll/pom.xml
@@ -17,17 +17,17 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
-    <groupId>io.netty</groupId>
-    <artifactId>netty-parent</artifactId>
+    <groupId>net.elytrium.fstack-netty-transport</groupId>
+    <artifactId>parent</artifactId>
     <version>4.1.77.Final-SNAPSHOT</version>
   </parent>
   <artifactId>netty-transport-native-epoll</artifactId>
 
-  <name>Netty/Transport/Native/Epoll</name>
+  <name>Netty/Transport/Native/F-Stack-Epoll</name>
   <packaging>jar</packaging>
 
   <properties>
-    <javaModuleName>io.netty.transport.epoll</javaModuleName>
+    <javaModuleName>net.elytrium.fstack-netty-transport.epoll</javaModuleName>
     <!-- Needed as we use SelfSignedCertificate in our tests -->
     <argLine.java9.extras>--add-exports java.base/sun.security.x509=ALL-UNNAMED</argLine.java9.extras>
     <unix.common.lib.name>netty-unix-common</unix.common.lib.name>
@@ -202,7 +202,7 @@
   
       <dependencies>
         <dependency>
-          <groupId>io.netty</groupId>
+          <groupId>net.elytrium.fstack-netty-transport</groupId>
           <artifactId>netty-transport-native-unix-common</artifactId>
           <version>${project.version}</version>
           <classifier>${jni.classifier}</classifier>
@@ -354,7 +354,7 @@
 
       <dependencies>
         <dependency>
-          <groupId>io.netty</groupId>
+          <groupId>net.elytrium.fstack-netty-transport</groupId>
           <artifactId>netty-transport-native-unix-common</artifactId>
           <version>${project.version}</version>
           <classifier>${jni.classifier}</classifier>
@@ -385,12 +385,12 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-native-unix-common</artifactId>
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-classes-epoll</artifactId>
       <version>${project.version}</version>
     </dependency>
@@ -401,17 +401,19 @@
       <scope>test</scope>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-native-unix-common-tests</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
     </dependency>
+    <!--
     <dependency>
       <groupId>${project.groupId}</groupId>
       <artifactId>${tcnative.artifactId}</artifactId>
       <classifier>${tcnative.classifier}</classifier>
       <scope>test</scope>
     </dependency>
+    -->
     <dependency>
       <groupId>io.github.artsok</groupId>
       <artifactId>rerunner-jupiter</artifactId>
diff --git a/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c
index 62e656f0b1..67e675f043 100644
--- a/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c
+++ b/transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c
@@ -35,7 +35,7 @@
 #include "netty_unix_socket.h"
 #include "netty_unix_util.h"
 
-#define LINUXSOCKET_CLASSNAME "io/netty/channel/epoll/LinuxSocket"
+#define LINUXSOCKET_CLASSNAME "net/elytrium/netty/transport/fstack/epoll/LinuxSocket"
 
 // TCP_FASTOPEN is defined in linux 3.7. We define this here so older kernels can compile.
 #ifndef TCP_FASTOPEN
@@ -725,7 +725,7 @@ static JNINativeMethod* createDynamicMethodsTable(const char* packagePrefix) {
     memcpy(dynamicMethods, fixed_method_table, sizeof(fixed_method_table));
   
     JNINativeMethod* dynamicMethod = &dynamicMethods[fixed_method_table_size];
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/PeerCredentials;", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/PeerCredentials;", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(I)L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "getPeerCredentials";
     dynamicMethod->fnPtr = (void *) netty_epoll_linuxsocket_getPeerCredentials;
@@ -767,7 +767,7 @@ jint netty_epoll_linuxsocket_JNI_OnLoad(JNIEnv* env, const char* packagePrefix)
         goto done;
     }
 
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/PeerCredentials", nettyClassName, done);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/PeerCredentials", nettyClassName, done);
     NETTY_JNI_UTIL_LOAD_CLASS(env, peerCredentialsClass, nettyClassName, done);
     netty_jni_util_free_dynamic_name(&nettyClassName);
 
diff --git a/transport-native-epoll/src/main/c/netty_epoll_native.c b/transport-native-epoll/src/main/c/netty_epoll_native.c
index 82ff4e6dbb..f1281dcf79 100644
--- a/transport-native-epoll/src/main/c/netty_epoll_native.c
+++ b/transport-native-epoll/src/main/c/netty_epoll_native.c
@@ -58,8 +58,8 @@
 #define NETTY_JNI_UTIL_BUILD_STATIC
 #endif
 
-#define STATICALLY_CLASSNAME "io/netty/channel/epoll/NativeStaticallyReferencedJniMethods"
-#define NATIVE_CLASSNAME "io/netty/channel/epoll/Native"
+#define STATICALLY_CLASSNAME "net/elytrium/netty/transport/fstack/epoll/NativeStaticallyReferencedJniMethods"
+#define NATIVE_CLASSNAME "net/elytrium/netty/transport/fstack/epoll/Native"
 
 // TCP_FASTOPEN is defined in linux 3.7. We define this here so older kernels can compile.
 #ifndef TCP_FASTOPEN
@@ -717,21 +717,21 @@ static JNINativeMethod* createDynamicMethodsTable(const char* packagePrefix) {
     memcpy(dynamicMethods, fixed_method_table, sizeof(fixed_method_table));
     
     JNINativeMethod* dynamicMethod = &dynamicMethods[fixed_method_table_size];
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/epoll/NativeDatagramPacketArray$NativeDatagramPacket;II)I", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray$NativeDatagramPacket;II)I", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(IZ[L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "sendmmsg0";
     dynamicMethod->fnPtr = (void *) netty_epoll_native_sendmmsg0;
     netty_jni_util_free_dynamic_name(&dynamicTypeName);
 
     ++dynamicMethod;
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/epoll/NativeDatagramPacketArray$NativeDatagramPacket;II)I", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray$NativeDatagramPacket;II)I", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(IZ[L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "recvmmsg0";
     dynamicMethod->fnPtr = (void *) netty_epoll_native_recvmmsg0;
     netty_jni_util_free_dynamic_name(&dynamicTypeName);
 
     ++dynamicMethod;
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/epoll/NativeDatagramPacketArray$NativeDatagramPacket;)I", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray$NativeDatagramPacket;)I", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(IZL", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "recvmsg0";
     dynamicMethod->fnPtr = (void *) netty_epoll_native_recvmsg0;
@@ -788,7 +788,7 @@ static jint netty_epoll_native_JNI_OnLoad(JNIEnv* env, const char* packagePrefix
     linuxsocketOnLoadCalled = 1;
 
     // Initialize this module
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/epoll/NativeDatagramPacketArray$NativeDatagramPacket", nettyClassName, done);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/epoll/NativeDatagramPacketArray$NativeDatagramPacket", nettyClassName, done);
     NETTY_JNI_UTIL_FIND_CLASS(env, nativeDatagramPacketCls, nettyClassName, done);
     netty_jni_util_free_dynamic_name(&nettyClassName);
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollAbstractDomainSocketEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollAbstractDomainSocketEchoTest.java
similarity index 89%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollAbstractDomainSocketEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollAbstractDomainSocketEchoTest.java
index 8745836dbe..1a80575116 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollAbstractDomainSocketEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollAbstractDomainSocketEchoTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
 import java.net.SocketAddress;
 import java.util.UUID;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollChannelConfigTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelConfigTest.java
similarity index 92%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollChannelConfigTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelConfigTest.java
index 88719784d5..89825f87ef 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollChannelConfigTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollChannelConfigTest.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.ChannelException;
 
-import io.netty.channel.unix.Buffer;
-import io.netty.channel.unix.IntegerUnixChannelOption;
-import io.netty.channel.unix.RawUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.IntegerUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.RawUnixChannelOption;
 import org.junit.jupiter.api.Test;
 
 import java.nio.ByteBuffer;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollCompositeBufferGatheringWriteTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollCompositeBufferGatheringWriteTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollCompositeBufferGatheringWriteTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollCompositeBufferGatheringWriteTest.java
index 17dd91e408..7514d2e67b 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollCompositeBufferGatheringWriteTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollCompositeBufferGatheringWriteTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelConfigTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelConfigTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelConfigTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelConfigTest.java
index 1a3beaa331..8145bf3225 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelConfigTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelConfigTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 
 import org.junit.jupiter.api.Test;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelTest.java
index e83fb4ba01..e2a4e9bd72 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramChannelTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.ChannelFuture;
@@ -21,7 +21,7 @@ import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.socket.InternetProtocolFamily;
-import io.netty.channel.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.Socket;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramConnectNotExistsTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramConnectNotExistsTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramConnectNotExistsTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramConnectNotExistsTest.java
index 23e1a3d43e..4d1a4078b7 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramConnectNotExistsTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramConnectNotExistsTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastIPv6Test.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastIPv6Test.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastIPv6Test.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastIPv6Test.java
index 6d7646ca81..f81107c84f 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastIPv6Test.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastIPv6Test.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastIpv6WithIpv4AddrTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastIpv6WithIpv4AddrTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastIpv6WithIpv4AddrTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastIpv6WithIpv4AddrTest.java
index ef77fa3490..9fd6c2523a 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastIpv6WithIpv4AddrTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastIpv6WithIpv4AddrTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.socket.InternetProtocolFamily;
 import io.netty.testsuite.transport.socket.DatagramMulticastTest;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastTest.java
index 8c178537d5..5d1937fe5d 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramMulticastTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramMulticastTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramScatteringReadTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramScatteringReadTest.java
similarity index 99%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramScatteringReadTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramScatteringReadTest.java
index 5ec9e3c2f6..809a0feb35 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramScatteringReadTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramScatteringReadTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.AdaptiveRecvByteBufAllocator;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastIPv6MappedTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastIPv6MappedTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastIPv6MappedTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastIPv6MappedTest.java
index d50d4b1933..6d170184de 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastIPv6MappedTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastIPv6MappedTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation.BootstrapComboFactory;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastIPv6Test.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastIPv6Test.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastIPv6Test.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastIPv6Test.java
index aa7b6d0b05..3c3f611255 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastIPv6Test.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastIPv6Test.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastTest.java
index ba1970f951..2dae9a5a41 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramUnicastTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDatagramUnicastTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.buffer.ByteBuf;
@@ -169,7 +169,7 @@ public class EpollDatagramUnicastTest extends DatagramUnicastInetTest {
             } else {
                 buffer = Unpooled.directBuffer(bufferCapacity).writeZero(bufferCapacity);
             }
-            cc.writeAndFlush(new io.netty.channel.unix.SegmentedDatagramPacket(buffer, segmentSize, addr)).sync();
+            cc.writeAndFlush(new net.elytrium.netty.transport.fstack.unix.SegmentedDatagramPacket(buffer, segmentSize, addr)).sync();
 
             if (!latch.await(10, TimeUnit.SECONDS)) {
                 Throwable error = errorRef.get();
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDetectPeerCloseWithoutReadTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDetectPeerCloseWithoutReadTest.java
similarity index 89%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDetectPeerCloseWithoutReadTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDetectPeerCloseWithoutReadTest.java
index cc41026f3f..f0a587c48c 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDetectPeerCloseWithoutReadTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDetectPeerCloseWithoutReadTest.java
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.channel.Channel;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.ServerChannel;
-import io.netty.channel.unix.tests.DetectPeerCloseWithoutReadTest;
+import net.elytrium.netty.transport.fstack.unix.tests.DetectPeerCloseWithoutReadTest;
 
 public class EpollDetectPeerCloseWithoutReadTest extends DetectPeerCloseWithoutReadTest {
     @Override
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramPathTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramPathTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramPathTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramPathTest.java
index be2f902f92..30e059c6f5 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramPathTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramPathTest.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.buffer.Unpooled;
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelInboundHandlerAdapter;
-import io.netty.channel.unix.DomainDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramPacket;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.AbstractClientSocketTest;
 import io.netty.util.CharsetUtil;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramUnicastTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramUnicastTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramUnicastTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramUnicastTest.java
index 371488dd27..abf1d6c9ee 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramUnicastTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainDatagramUnicastTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.buffer.ByteBuf;
@@ -22,9 +22,9 @@ import io.netty.channel.ChannelFuture;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
 import io.netty.channel.SimpleChannelInboundHandler;
-import io.netty.channel.unix.DomainDatagramChannel;
-import io.netty.channel.unix.DomainDatagramPacket;
-import io.netty.channel.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannel;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.DatagramUnicastTest;
 import org.junit.jupiter.api.Test;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketDataReadInitialStateTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketDataReadInitialStateTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketDataReadInitialStateTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketDataReadInitialStateTest.java
index 49b90e4447..e6c9bec707 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketDataReadInitialStateTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketDataReadInitialStateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketEchoTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketEchoTest.java
index 3e8c64233d..eeabd86758 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFdTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFdTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFdTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFdTest.java
index 6013908e56..52d1488534 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFdTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFdTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
@@ -22,8 +22,8 @@ import io.netty.channel.ChannelFuture;
 import io.netty.channel.ChannelFutureListener;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
-import io.netty.channel.unix.DomainSocketReadMode;
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketReadMode;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.AbstractSocketTest;
 import org.junit.jupiter.api.Test;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFileRegionTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFileRegionTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFileRegionTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFileRegionTest.java
index b77f50c6ca..b9927df890 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFileRegionTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFileRegionTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFixedLengthEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFixedLengthEchoTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFixedLengthEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFixedLengthEchoTest.java
index 1c343289c7..1805ef6ae9 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketFixedLengthEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketFixedLengthEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketGatheringWriteTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketGatheringWriteTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketGatheringWriteTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketGatheringWriteTest.java
index 5e25a9369c..09b170b6a7 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketGatheringWriteTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketGatheringWriteTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketObjectEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketObjectEchoTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketObjectEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketObjectEchoTest.java
index fc7d7ce864..1c4cf2a7bb 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketObjectEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketObjectEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketReuseFdTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketReuseFdTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketReuseFdTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketReuseFdTest.java
index 8a18feb5c5..356f6bed8c 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketReuseFdTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketReuseFdTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketShutdownOutputByPeerTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketShutdownOutputByPeerTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketShutdownOutputByPeerTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketShutdownOutputByPeerTest.java
index 8b0077c8c6..eb5447c5aa 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketShutdownOutputByPeerTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketShutdownOutputByPeerTest.java
@@ -14,10 +14,10 @@
  * under the License.
  */
 
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.ServerBootstrap;
-import io.netty.channel.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
 import io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory;
 import io.netty.testsuite.transport.socket.AbstractSocketShutdownOutputByPeerTest;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslClientRenegotiateTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslClientRenegotiateTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslClientRenegotiateTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslClientRenegotiateTest.java
index 64858ce921..bcee3dbf11 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslClientRenegotiateTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslClientRenegotiateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslEchoTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslEchoTest.java
index 87755ab555..3d6ad436cb 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslGreetingTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslGreetingTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslGreetingTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslGreetingTest.java
index 9ff9f1591a..82ea6f700f 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketSslGreetingTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketSslGreetingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketStartTlsTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketStartTlsTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketStartTlsTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketStartTlsTest.java
index dfdf6eded0..af9014ef10 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketStartTlsTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketStartTlsTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketStringEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketStringEchoTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketStringEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketStringEchoTest.java
index 29945edead..b7f1521d5a 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainSocketStringEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollDomainSocketStringEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketAutoReadTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketAutoReadTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketAutoReadTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketAutoReadTest.java
index 330aa57146..0bbf608d62 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketAutoReadTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketAutoReadTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketConditionalWritabilityTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketConditionalWritabilityTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketConditionalWritabilityTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketConditionalWritabilityTest.java
index ffff608d74..31d281c899 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketConditionalWritabilityTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketConditionalWritabilityTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketDataReadInitialStateTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketDataReadInitialStateTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketDataReadInitialStateTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketDataReadInitialStateTest.java
index b246234d58..2246b36b80 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketDataReadInitialStateTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketDataReadInitialStateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketExceptionHandlingTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketExceptionHandlingTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketExceptionHandlingTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketExceptionHandlingTest.java
index 06beed2b86..0b75f73eed 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketExceptionHandlingTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketExceptionHandlingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketHalfClosed.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketHalfClosed.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketHalfClosed.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketHalfClosed.java
index 74ae17a9ff..9f5785d7d1 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketHalfClosed.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketHalfClosed.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketReadPendingTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketReadPendingTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketReadPendingTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketReadPendingTest.java
index 7fe3ebc6ec..965bd9438c 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketReadPendingTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketReadPendingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketStringEchoBusyWaitTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketStringEchoBusyWaitTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketStringEchoBusyWaitTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketStringEchoBusyWaitTest.java
index 916cd21a75..ec49a3ee2c 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollETSocketStringEchoBusyWaitTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollETSocketStringEchoBusyWaitTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollEventLoopTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoopTest.java
similarity index 98%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollEventLoopTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoopTest.java
index 42e9fe61eb..53e9243c69 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollEventLoopTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollEventLoopTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.testsuite.transport.AbstractSingleThreadEventLoopTest;
 import io.netty.channel.DefaultSelectStrategyFactory;
@@ -21,7 +21,7 @@ import io.netty.channel.EventLoop;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.ServerChannel;
 import io.netty.channel.socket.ServerSocketChannel;
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import io.netty.util.concurrent.DefaultThreadFactory;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.RejectedExecutionHandlers;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollJdkLoopbackSocketSslEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollJdkLoopbackSocketSslEchoTest.java
similarity index 88%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollJdkLoopbackSocketSslEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollJdkLoopbackSocketSslEchoTest.java
index 3a1c246128..5aaadf28b0 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollJdkLoopbackSocketSslEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollJdkLoopbackSocketSslEchoTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.tests.UnixTestUtils;
+import net.elytrium.netty.transport.fstack.unix.tests.UnixTestUtils;
 
 import java.net.SocketAddress;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollKQueueIovArrayTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollKQueueIovArrayTest.java
similarity index 87%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollKQueueIovArrayTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollKQueueIovArrayTest.java
index 96a4f05038..b9f86ff8d8 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollKQueueIovArrayTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollKQueueIovArrayTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.tests.IovArrayTest;
+import net.elytrium.netty.transport.fstack.unix.tests.IovArrayTest;
 import org.junit.jupiter.api.BeforeAll;
 
 public class EpollKQueueIovArrayTest extends IovArrayTest {
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketAutoReadTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketAutoReadTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketAutoReadTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketAutoReadTest.java
index 8f6b794f22..3fa7fa0a69 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketAutoReadTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketAutoReadTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketConditionalWritabilityTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketConditionalWritabilityTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketConditionalWritabilityTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketConditionalWritabilityTest.java
index 9bfb25804c..94d0aefcf4 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketConditionalWritabilityTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketConditionalWritabilityTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketDataReadInitialStateTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketDataReadInitialStateTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketDataReadInitialStateTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketDataReadInitialStateTest.java
index 5d484390c8..6d0000808e 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketDataReadInitialStateTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketDataReadInitialStateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketExceptionHandlingTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketExceptionHandlingTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketExceptionHandlingTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketExceptionHandlingTest.java
index f11635eabf..39853a6277 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketExceptionHandlingTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketExceptionHandlingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketHalfClosed.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketHalfClosed.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketHalfClosed.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketHalfClosed.java
index cbf3dbfeb9..84b1c56387 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketHalfClosed.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketHalfClosed.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketReadPendingTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketReadPendingTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketReadPendingTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketReadPendingTest.java
index 46b8b1b77a..8b6e068847 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketReadPendingTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketReadPendingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketStringEchoBusyWaitTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketStringEchoBusyWaitTest.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketStringEchoBusyWaitTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketStringEchoBusyWaitTest.java
index 21aaf16565..bdef03a89a 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollLTSocketStringEchoBusyWaitTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollLTSocketStringEchoBusyWaitTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollReuseAddrTest.java
similarity index 99%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollReuseAddrTest.java
index 046bfd593f..4d8db61929 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollReuseAddrTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollReuseAddrTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.AbstractBootstrap;
 import io.netty.bootstrap.Bootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollServerSocketChannelConfigTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannelConfigTest.java
similarity index 98%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollServerSocketChannelConfigTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannelConfigTest.java
index 0985cb1da1..86bbfaf772 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollServerSocketChannelConfigTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollServerSocketChannelConfigTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.channel.ChannelInboundHandlerAdapter;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelConfigTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelConfigTest.java
similarity index 99%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelConfigTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelConfigTest.java
index 4e4e9fdb10..944d6f80f7 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelConfigTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelConfigTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.github.artsok.RepeatedIfExceptionsTest;
 import io.netty.bootstrap.Bootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelNotYetConnectedTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelNotYetConnectedTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelNotYetConnectedTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelNotYetConnectedTest.java
index 5cbfaf08df..47317def69 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelNotYetConnectedTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelNotYetConnectedTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelTest.java
similarity index 98%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelTest.java
index 689ad0771a..1c14fc0bf5 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketChannelTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.ChannelInboundHandlerAdapter;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketCloseForciblyTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketCloseForciblyTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketCloseForciblyTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketCloseForciblyTest.java
index 43b561e95e..08cd2f1050 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketCloseForciblyTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketCloseForciblyTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketConnectTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketConnectTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketConnectTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketConnectTest.java
index 378f41e0ce..64666701cb 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketConnectTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketConnectTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketConnectionAttemptTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketConnectionAttemptTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketConnectionAttemptTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketConnectionAttemptTest.java
index da636fc5a4..0a78ccf00f 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketConnectionAttemptTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketConnectionAttemptTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketEchoTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketEchoTest.java
index 61e89faa79..bd8dacb839 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketFileRegionTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketFileRegionTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketFileRegionTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketFileRegionTest.java
index a28ae007bd..e04263e1f7 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketFileRegionTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketFileRegionTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketFixedLengthEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketFixedLengthEchoTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketFixedLengthEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketFixedLengthEchoTest.java
index 92cb620de3..c7518d118c 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketFixedLengthEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketFixedLengthEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketGatheringWriteTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketGatheringWriteTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketGatheringWriteTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketGatheringWriteTest.java
index 7ae8a5aed7..7e1e38b363 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketGatheringWriteTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketGatheringWriteTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketMultipleConnectTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketMultipleConnectTest.java
similarity index 97%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketMultipleConnectTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketMultipleConnectTest.java
index b70313545e..573b99d771 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketMultipleConnectTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketMultipleConnectTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketObjectEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketObjectEchoTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketObjectEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketObjectEchoTest.java
index 78e7527fce..00b314d04b 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketObjectEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketObjectEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketRstTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketRstTest.java
similarity index 90%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketRstTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketRstTest.java
index 3fa8b446e8..01bb7f970c 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketRstTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketRstTest.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.channel.Channel;
-import io.netty.channel.unix.Errors;
-import io.netty.channel.unix.Errors.NativeIoException;
+import net.elytrium.netty.transport.fstack.unix.Errors;
+import net.elytrium.netty.transport.fstack.unix.Errors.NativeIoException;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.SocketRstTest;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketShutdownOutputByPeerTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketShutdownOutputByPeerTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketShutdownOutputByPeerTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketShutdownOutputByPeerTest.java
index 69ae170d36..3c30c57893 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketShutdownOutputByPeerTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketShutdownOutputByPeerTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketShutdownOutputBySelfTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketShutdownOutputBySelfTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketShutdownOutputBySelfTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketShutdownOutputBySelfTest.java
index 0fdc285041..dd59b4df4a 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketShutdownOutputBySelfTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketShutdownOutputBySelfTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslClientRenegotiateTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslClientRenegotiateTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslClientRenegotiateTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslClientRenegotiateTest.java
index d73357bf28..69acc14728 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslClientRenegotiateTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslClientRenegotiateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslEchoTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslEchoTest.java
index e2502acc9c..933782ad61 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslGreetingTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslGreetingTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslGreetingTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslGreetingTest.java
index 065268a2b6..a3c132690b 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslGreetingTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslGreetingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslSessionReuseTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslSessionReuseTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslSessionReuseTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslSessionReuseTest.java
index e3a2828ed2..5f1970ce6d 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketSslSessionReuseTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketSslSessionReuseTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStartTlsTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStartTlsTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStartTlsTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStartTlsTest.java
index 132338bb22..e3fdcc7d8d 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStartTlsTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStartTlsTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStringEchoBusyWaitTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStringEchoBusyWaitTest.java
similarity index 98%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStringEchoBusyWaitTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStringEchoBusyWaitTest.java
index 954ca4bab6..53c05b240b 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStringEchoBusyWaitTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStringEchoBusyWaitTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStringEchoTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStringEchoTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStringEchoTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStringEchoTest.java
index b25a40af16..e6d17fa276 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketStringEchoTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketStringEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTcpMd5Test.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTcpMd5Test.java
similarity index 99%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTcpMd5Test.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTcpMd5Test.java
index 6bbcb2e660..bd519e7a8f 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTcpMd5Test.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTcpMd5Test.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.ChannelInboundHandlerAdapter;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTest.java
similarity index 88%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTest.java
index 79731bd995..30ae4eb789 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTest.java
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.tests.SocketTest;
-import io.netty.channel.unix.tests.UnixTestUtils;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.tests.SocketTest;
+import net.elytrium.netty.transport.fstack.unix.tests.UnixTestUtils;
 import org.junit.jupiter.api.BeforeAll;
 import org.junit.jupiter.api.Test;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTestPermutation.java
similarity index 96%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTestPermutation.java
index aea11e24ae..6742dd3a9d 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketTestPermutation.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSocketTestPermutation.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
@@ -25,8 +25,8 @@ import io.netty.channel.socket.InternetProtocolFamily;
 import io.netty.channel.socket.nio.NioDatagramChannel;
 import io.netty.channel.socket.nio.NioServerSocketChannel;
 import io.netty.channel.socket.nio.NioSocketChannel;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.tests.UnixTestUtils;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.tests.UnixTestUtils;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory;
 import io.netty.testsuite.transport.socket.SocketTestPermutation;
@@ -37,8 +37,8 @@ import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 
-import static io.netty.channel.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_CLIENT;
-import static io.netty.channel.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_SERVER;
+import static net.elytrium.netty.transport.fstack.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_CLIENT;
+import static net.elytrium.netty.transport.fstack.epoll.Native.IS_SUPPORTING_TCP_FASTOPEN_SERVER;
 
 class EpollSocketTestPermutation extends SocketTestPermutation {
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSpliceTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSpliceTest.java
similarity index 99%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSpliceTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSpliceTest.java
index fee628b046..4bca55bcec 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSpliceTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollSpliceTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
@@ -26,7 +26,7 @@ import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.SimpleChannelInboundHandler;
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import io.netty.util.NetUtil;
 import io.netty.util.internal.PlatformDependent;
 import org.junit.jupiter.api.Test;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollTest.java
index 3e09949053..88c3e2ffc3 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.Timeout;
 
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollWriteBeforeRegisteredTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollWriteBeforeRegisteredTest.java
similarity index 95%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollWriteBeforeRegisteredTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollWriteBeforeRegisteredTest.java
index 7e93faf0cd..dfc945989b 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollWriteBeforeRegisteredTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/EpollWriteBeforeRegisteredTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/LinuxSocketTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/LinuxSocketTest.java
similarity index 93%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/LinuxSocketTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/LinuxSocketTest.java
index 4fe962e857..fbd70473c5 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/LinuxSocketTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/LinuxSocketTest.java
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.Errors.NativeIoException;
-import io.netty.channel.unix.Socket;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.Errors.NativeIoException;
+import net.elytrium.netty.transport.fstack.unix.Socket;
 import java.util.UUID;
 import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.BeforeAll;
diff --git a/transport-native-epoll/src/test/java/io/netty/channel/epoll/NativeTest.java b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/NativeTest.java
similarity index 93%
rename from transport-native-epoll/src/test/java/io/netty/channel/epoll/NativeTest.java
rename to transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/NativeTest.java
index 09e04e9614..ad1520029a 100644
--- a/transport-native-epoll/src/test/java/io/netty/channel/epoll/NativeTest.java
+++ b/transport-native-epoll/src/test/java/net/elytrium/netty/transport/fstack/epoll/NativeTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.epoll;
+package net.elytrium.netty.transport.fstack.epoll;
 
 import io.netty.util.NetUtil;
 import org.junit.jupiter.api.Test;
@@ -22,7 +22,7 @@ import java.net.Inet6Address;
 import java.net.InetSocketAddress;
 import java.nio.ByteBuffer;
 
-import static io.netty.channel.unix.NativeInetAddress.address;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.address;
 import static org.junit.jupiter.api.Assertions.assertEquals;
 
 public class NativeTest {
diff --git a/transport-native-kqueue/pom.xml b/transport-native-kqueue/pom.xml
index e1cc0e79a5..1108e637f8 100644
--- a/transport-native-kqueue/pom.xml
+++ b/transport-native-kqueue/pom.xml
@@ -17,13 +17,13 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
-    <groupId>io.netty</groupId>
-    <artifactId>netty-parent</artifactId>
+    <groupId>net.elytrium.fstack-netty-transport</groupId>
+    <artifactId>parent</artifactId>
     <version>4.1.77.Final-SNAPSHOT</version>
   </parent>
   <artifactId>netty-transport-native-kqueue</artifactId>
 
-  <name>Netty/Transport/Native/KQueue</name>
+  <name>Netty/Transport/Native/F-Stack-KQueue</name>
   <packaging>jar</packaging>
 
   <profiles>
@@ -110,7 +110,7 @@
                     </manifest>
                     <manifestEntries>
                       <Bundle-NativeCode>META-INF/native/libnetty_transport_native_kqueue_${os.detected.arch}.jnilib; osname=MacOSX; processor=${os.detected.arch}</Bundle-NativeCode>
-                      <Fragment-Host>io.netty.transport-classes-kqueue</Fragment-Host>
+                      <Fragment-Host>net.elytrium.fstack-netty-transport.transport-classes-kqueue</Fragment-Host>
                       <Automatic-Module-Name>${javaModuleName}</Automatic-Module-Name>
                     </manifestEntries>
                     <index>true</index>
@@ -125,7 +125,7 @@
       </build>
       <dependencies>
         <dependency>
-          <groupId>io.netty</groupId>
+          <groupId>net.elytrium.fstack-netty-transport</groupId>
           <artifactId>netty-transport-native-unix-common</artifactId>
           <version>${project.version}</version>
           <classifier>${jni.classifier}</classifier>
@@ -217,7 +217,7 @@
                     </manifest>
                     <manifestEntries>
                       <Bundle-NativeCode>META-INF/native/libnetty_transport_native_kqueue_aarch_64.jnilib; osname=MacOSX; processor=aarch_64</Bundle-NativeCode>
-                      <Fragment-Host>io.netty.transport-classes-kqueue</Fragment-Host>
+                      <Fragment-Host>net.elytrium.fstack-netty-transport.transport-classes-kqueue</Fragment-Host>
                       <Automatic-Module-Name>${javaModuleName}</Automatic-Module-Name>
                     </manifestEntries>
                     <index>true</index>
@@ -232,7 +232,7 @@
       </build>
       <dependencies>
         <dependency>
-          <groupId>io.netty</groupId>
+          <groupId>net.elytrium.fstack-netty-transport</groupId>
           <artifactId>netty-transport-native-unix-common</artifactId>
           <version>${project.version}</version>
           <classifier>${jni.classifier}</classifier>
@@ -322,7 +322,7 @@
                     </manifest>
                     <manifestEntries>
                       <Bundle-NativeCode>META-INF/native/libnetty_transport_native_kqueue_${os.detected.arch}.jnilib; osname=OpenBSD; processor=${os.detected.arch}</Bundle-NativeCode>
-                      <Fragment-Host>io.netty.transport-classes-kqueue</Fragment-Host>
+                      <Fragment-Host>net.elytrium.fstack-netty-transport.transport-classes-kqueue</Fragment-Host>
                     </manifestEntries>
                     <index>true</index>
                     <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
@@ -336,7 +336,7 @@
       </build>
       <dependencies>
         <dependency>
-          <groupId>io.netty</groupId>
+          <groupId>net.elytrium.fstack-netty-transport</groupId>
           <artifactId>netty-transport-native-unix-common</artifactId>
           <version>${project.version}</version>
           <classifier>${jni.classifier}</classifier>
@@ -426,7 +426,7 @@
                     </manifest>
                     <manifestEntries>
                       <Bundle-NativeCode>META-INF/native/libnetty_transport_native_kqueue_${os.detected.arch}.jnilib; osname=FreeBSD; processor=${os.detected.arch}</Bundle-NativeCode>
-                      <Fragment-Host>io.netty.transport-classes-kqueue</Fragment-Host>
+                      <Fragment-Host>net.elytrium.fstack-netty-transport.transport-classes-kqueue</Fragment-Host>
                     </manifestEntries>
                     <index>true</index>
                     <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
@@ -440,7 +440,7 @@
       </build>
       <dependencies>
         <dependency>
-          <groupId>io.netty</groupId>
+          <groupId>net.elytrium.fstack-netty-transport</groupId>
           <artifactId>netty-transport-native-unix-common</artifactId>
           <version>${project.version}</version>
           <classifier>${jni.classifier}</classifier>
@@ -477,7 +477,7 @@
   </profiles>
 
   <properties>
-    <javaModuleName>io.netty.transport.kqueue</javaModuleName>
+    <javaModuleName>net.elytrium.fstack-netty-transport.kqueue</javaModuleName>
     <!-- Needed as we use SelfSignedCertificate in our tests -->
     <argLine.java9.extras>--add-exports java.base/sun.security.x509=ALL-UNNAMED</argLine.java9.extras>
     <unix.common.lib.name>netty-unix-common</unix.common.lib.name>
@@ -507,7 +507,7 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-native-unix-common</artifactId>
       <version>${project.version}</version>
     </dependency>
@@ -523,17 +523,19 @@
       <scope>test</scope>
     </dependency>
     <dependency>
-      <groupId>io.netty</groupId>
+      <groupId>net.elytrium.fstack-netty-transport</groupId>
       <artifactId>netty-transport-native-unix-common-tests</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
     </dependency>
+    <!--
     <dependency>
       <groupId>${project.groupId}</groupId>
       <artifactId>${tcnative.artifactId}</artifactId>
       <classifier>${tcnative.classifier}</classifier>
       <scope>test</scope>
     </dependency>
+    -->
   </dependencies>
 
   <build>
diff --git a/transport-native-kqueue/src/main/c/netty_kqueue_bsdsocket.c b/transport-native-kqueue/src/main/c/netty_kqueue_bsdsocket.c
index 6e0822f4c9..25d16edfed 100644
--- a/transport-native-kqueue/src/main/c/netty_kqueue_bsdsocket.c
+++ b/transport-native-kqueue/src/main/c/netty_kqueue_bsdsocket.c
@@ -33,7 +33,7 @@
 #include "netty_unix_socket.h"
 #include "netty_unix_util.h"
 
-#define BSDSOCKET_CLASSNAME "io/netty/channel/kqueue/BsdSocket"
+#define BSDSOCKET_CLASSNAME "net/elytrium/netty/transport/fstack/kqueue/BsdSocket"
 
 // Those are initialized in the init(...) method and cached for performance reasons
 static jclass stringClass = NULL;
@@ -294,7 +294,7 @@ static JNINativeMethod* createDynamicMethodsTable(const char* packagePrefix) {
     netty_jni_util_free_dynamic_name(&dynamicTypeName);
 
     ++dynamicMethod;
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/PeerCredentials;", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/PeerCredentials;", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(I)L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "getPeerCredentials";
     dynamicMethod->fnPtr = (void *) netty_kqueue_bsdsocket_getPeerCredentials;
@@ -346,7 +346,7 @@ jint netty_kqueue_bsdsocket_JNI_OnLoad(JNIEnv* env, const char* packagePrefix) {
   
     NETTY_JNI_UTIL_LOAD_CLASS(env, stringClass, "java/lang/String", done);
 
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/PeerCredentials", nettyClassName, done);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/PeerCredentials", nettyClassName, done);
     NETTY_JNI_UTIL_LOAD_CLASS(env, peerCredentialsClass, nettyClassName, done);
     netty_jni_util_free_dynamic_name(&nettyClassName);
   
diff --git a/transport-native-kqueue/src/main/c/netty_kqueue_eventarray.c b/transport-native-kqueue/src/main/c/netty_kqueue_eventarray.c
index e254a961ff..0853beba44 100644
--- a/transport-native-kqueue/src/main/c/netty_kqueue_eventarray.c
+++ b/transport-native-kqueue/src/main/c/netty_kqueue_eventarray.c
@@ -24,7 +24,7 @@
 #include "netty_unix_jni.h"
 #include "netty_unix_util.h"
 
-#define EVENT_ARRAY_CLASSNAME "io/netty/channel/kqueue/KQueueEventArray"
+#define EVENT_ARRAY_CLASSNAME "net/elytrium/netty/transport/fstack/kqueue/KQueueEventArray"
 
 static void netty_kqueue_eventarray_evSet(JNIEnv* env, jclass clzz, jlong keventAddress, jint ident, jshort filter, jshort flags, jint fflags) {
     EV_SET((struct kevent*) keventAddress, ident, filter, flags, fflags, 0, NULL);
diff --git a/transport-native-kqueue/src/main/c/netty_kqueue_native.c b/transport-native-kqueue/src/main/c/netty_kqueue_native.c
index cd162380a6..cc18ca3457 100644
--- a/transport-native-kqueue/src/main/c/netty_kqueue_native.c
+++ b/transport-native-kqueue/src/main/c/netty_kqueue_native.c
@@ -43,8 +43,8 @@
 #define NETTY_JNI_UTIL_BUILD_STATIC
 #endif
 
-#define STATICALLY_CLASSNAME "io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods"
-#define NATIVE_CLASSNAME "io/netty/channel/kqueue/Native"
+#define STATICALLY_CLASSNAME "net/elytrium/netty/transport/fstack/kqueue/KQueueStaticallyReferencedJniMethods"
+#define NATIVE_CLASSNAME "net/elytrium/netty/transport/fstack/kqueue/Native"
 
 // Currently only macOS supports EVFILT_SOCK, and it is currently only available in internal APIs.
 // To make compiling easier we redefine the values here if they are not present.
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueAbstractDomainSocketEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueAbstractDomainSocketEchoTest.java
similarity index 88%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueAbstractDomainSocketEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueAbstractDomainSocketEchoTest.java
index f1ada13b38..213f5c43c8 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueAbstractDomainSocketEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueAbstractDomainSocketEchoTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
-import io.netty.channel.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
 import java.net.SocketAddress;
 import java.util.UUID;
 
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueChannelConfigTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelConfigTest.java
similarity index 94%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueChannelConfigTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelConfigTest.java
index 150a23749a..d34fdf404e 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueChannelConfigTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueChannelConfigTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.ChannelException;
@@ -21,9 +21,9 @@ import io.netty.channel.ChannelInboundHandlerAdapter;
 import io.netty.channel.ChannelOption;
 import io.netty.channel.EventLoopGroup;
 
-import io.netty.channel.unix.Buffer;
-import io.netty.channel.unix.IntegerUnixChannelOption;
-import io.netty.channel.unix.RawUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.IntegerUnixChannelOption;
+import net.elytrium.netty.transport.fstack.unix.RawUnixChannelOption;
 import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
 
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueCompositeBufferGatheringWriteTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueCompositeBufferGatheringWriteTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueCompositeBufferGatheringWriteTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueCompositeBufferGatheringWriteTest.java
index f0cd700bc5..c3ddeecce0 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueCompositeBufferGatheringWriteTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueCompositeBufferGatheringWriteTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramConnectNotExistsTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramConnectNotExistsTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramConnectNotExistsTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramConnectNotExistsTest.java
index 6b8f51e849..bb8e8487af 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramConnectNotExistsTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramConnectNotExistsTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastIPv6MappedTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastIPv6MappedTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastIPv6MappedTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastIPv6MappedTest.java
index 116fdb1d19..313a612aea 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastIPv6MappedTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastIPv6MappedTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation.BootstrapComboFactory;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastIPv6Test.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastIPv6Test.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastIPv6Test.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastIPv6Test.java
index 52c21d6ef9..dae2d86156 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastIPv6Test.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastIPv6Test.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastTest.java
index 48004910d3..42b457590a 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDatagramUnicastTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDatagramUnicastTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.socket.InternetProtocolFamily;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDetectPeerCloseWithoutReadTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDetectPeerCloseWithoutReadTest.java
similarity index 89%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDetectPeerCloseWithoutReadTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDetectPeerCloseWithoutReadTest.java
index 6bcf9bbd56..69e3ac7832 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDetectPeerCloseWithoutReadTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDetectPeerCloseWithoutReadTest.java
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.Channel;
 import io.netty.channel.EventLoopGroup;
 import io.netty.channel.ServerChannel;
-import io.netty.channel.unix.tests.DetectPeerCloseWithoutReadTest;
+import net.elytrium.netty.transport.fstack.unix.tests.DetectPeerCloseWithoutReadTest;
 
 public class KQueueDetectPeerCloseWithoutReadTest extends DetectPeerCloseWithoutReadTest {
     @Override
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramPathTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramPathTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramPathTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramPathTest.java
index e3a44e53b3..7b2b59ed8c 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramPathTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramPathTest.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.buffer.Unpooled;
 import io.netty.channel.Channel;
 import io.netty.channel.ChannelInboundHandlerAdapter;
-import io.netty.channel.unix.DomainDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramPacket;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.AbstractClientSocketTest;
 import io.netty.util.CharsetUtil;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramUnicastTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramUnicastTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramUnicastTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramUnicastTest.java
index b4b7413c6f..fd6117062d 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramUnicastTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainDatagramUnicastTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.buffer.ByteBuf;
@@ -22,9 +22,9 @@ import io.netty.channel.ChannelFuture;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
 import io.netty.channel.SimpleChannelInboundHandler;
-import io.netty.channel.unix.DomainDatagramChannel;
-import io.netty.channel.unix.DomainDatagramPacket;
-import io.netty.channel.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramChannel;
+import net.elytrium.netty.transport.fstack.unix.DomainDatagramPacket;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.DatagramUnicastTest;
 import org.junit.jupiter.api.Test;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketDataReadInitialStateTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketDataReadInitialStateTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketDataReadInitialStateTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketDataReadInitialStateTest.java
index ec71839932..c12c885fec 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketDataReadInitialStateTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketDataReadInitialStateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketEchoTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketEchoTest.java
index f3a74679bf..427b31a094 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFdTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFdTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFdTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFdTest.java
index df1a4a054f..3ceb1a07b1 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFdTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFdTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
@@ -22,8 +22,8 @@ import io.netty.channel.ChannelFuture;
 import io.netty.channel.ChannelFutureListener;
 import io.netty.channel.ChannelHandlerContext;
 import io.netty.channel.ChannelInboundHandlerAdapter;
-import io.netty.channel.unix.DomainSocketReadMode;
-import io.netty.channel.unix.FileDescriptor;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketReadMode;
+import net.elytrium.netty.transport.fstack.unix.FileDescriptor;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.AbstractSocketTest;
 import org.junit.jupiter.api.Test;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFileRegionTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFileRegionTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFileRegionTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFileRegionTest.java
index e3becd10f9..d8e6beafb3 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFileRegionTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFileRegionTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFixedLengthEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFixedLengthEchoTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFixedLengthEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFixedLengthEchoTest.java
index 81afe99d5c..ec3bc682d5 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketFixedLengthEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketFixedLengthEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketGatheringWriteTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketGatheringWriteTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketGatheringWriteTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketGatheringWriteTest.java
index 77e98ae172..12ab9d3997 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketGatheringWriteTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketGatheringWriteTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketObjectEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketObjectEchoTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketObjectEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketObjectEchoTest.java
index d67e636473..4467cdd7ed 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketObjectEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketObjectEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketReuseFdTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketReuseFdTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketReuseFdTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketReuseFdTest.java
index f8407e0d43..c4d6e5fc38 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketReuseFdTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketReuseFdTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketShutdownOutputByPeerTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketShutdownOutputByPeerTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketShutdownOutputByPeerTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketShutdownOutputByPeerTest.java
index 39e68aebfb..3983f4c26f 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketShutdownOutputByPeerTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketShutdownOutputByPeerTest.java
@@ -13,10 +13,10 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.ServerBootstrap;
-import io.netty.channel.unix.Buffer;
+import net.elytrium.netty.transport.fstack.unix.Buffer;
 import io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory;
 import io.netty.testsuite.transport.socket.AbstractSocketShutdownOutputByPeerTest;
 
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslClientRenegotiateTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslClientRenegotiateTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslClientRenegotiateTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslClientRenegotiateTest.java
index 07988b6256..3a2cbf16e1 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslClientRenegotiateTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslClientRenegotiateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslEchoTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslEchoTest.java
index c1628db9eb..3c1d4706d9 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslGreetingTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslGreetingTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslGreetingTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslGreetingTest.java
index 3379567a18..da229d52de 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketSslGreetingTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketSslGreetingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketStartTlsTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketStartTlsTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketStartTlsTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketStartTlsTest.java
index f76fc9e179..4c285bf282 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketStartTlsTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketStartTlsTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketStringEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketStringEchoTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketStringEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketStringEchoTest.java
index 7b3831a5e6..ecf9741d87 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainSocketStringEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueDomainSocketStringEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketAutoReadTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketAutoReadTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketAutoReadTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketAutoReadTest.java
index 1f619e1811..4d12d1fc9d 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketAutoReadTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketAutoReadTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketConditionalWritabilityTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketConditionalWritabilityTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketConditionalWritabilityTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketConditionalWritabilityTest.java
index d316125eeb..1c83776498 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketConditionalWritabilityTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketConditionalWritabilityTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketDataReadInitialStateTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketDataReadInitialStateTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketDataReadInitialStateTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketDataReadInitialStateTest.java
index 510a50958d..63abc1ad34 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketDataReadInitialStateTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketDataReadInitialStateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketExceptionHandlingTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketExceptionHandlingTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketExceptionHandlingTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketExceptionHandlingTest.java
index d799080994..473f273d58 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketExceptionHandlingTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketExceptionHandlingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketHalfClosedTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketHalfClosedTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketHalfClosedTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketHalfClosedTest.java
index af5a6b0fc6..a0ab74ac81 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketHalfClosedTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketHalfClosedTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketReadPendingTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketReadPendingTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketReadPendingTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketReadPendingTest.java
index 19352ef1ab..7f224d59d6 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueETSocketReadPendingTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueETSocketReadPendingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueEventLoopTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoopTest.java
similarity index 97%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueEventLoopTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoopTest.java
index 97e1c5e94d..b82c67e9e9 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueEventLoopTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueEventLoopTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.channel.EventLoop;
 import io.netty.channel.EventLoopGroup;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueIovArrayTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueIovArrayTest.java
similarity index 87%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueIovArrayTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueIovArrayTest.java
index a34b9ac9f6..1842563754 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueIovArrayTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueIovArrayTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
-import io.netty.channel.unix.tests.IovArrayTest;
+import net.elytrium.netty.transport.fstack.unix.tests.IovArrayTest;
 import org.junit.jupiter.api.BeforeAll;
 
 public class KQueueIovArrayTest extends IovArrayTest {
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueJdkLoopbackSocketSslEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueJdkLoopbackSocketSslEchoTest.java
similarity index 87%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueJdkLoopbackSocketSslEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueJdkLoopbackSocketSslEchoTest.java
index 2f966a9f5b..a0dc0b01bb 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueJdkLoopbackSocketSslEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueJdkLoopbackSocketSslEchoTest.java
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
-import io.netty.channel.unix.tests.UnixTestUtils;
+import net.elytrium.netty.transport.fstack.unix.tests.UnixTestUtils;
 
 import java.net.SocketAddress;
 
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueRcvAllocatorOverrideSocketSslEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueRcvAllocatorOverrideSocketSslEchoTest.java
similarity index 96%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueRcvAllocatorOverrideSocketSslEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueRcvAllocatorOverrideSocketSslEchoTest.java
index 58b8374aaa..b86660cb83 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueRcvAllocatorOverrideSocketSslEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueRcvAllocatorOverrideSocketSslEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfigTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannelConfigTest.java
similarity index 98%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfigTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannelConfigTest.java
index 894d9d10f4..caeeebf30f 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfigTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueServerSocketChannelConfigTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.channel.ChannelInboundHandlerAdapter;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketChannelConfigTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelConfigTest.java
similarity index 98%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketChannelConfigTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelConfigTest.java
index af4fe75801..5a4c842295 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketChannelConfigTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelConfigTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.channel.ChannelException;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketChannelNotYetConnectedTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelNotYetConnectedTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketChannelNotYetConnectedTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelNotYetConnectedTest.java
index a9d93eef99..751894f8b4 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketChannelNotYetConnectedTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketChannelNotYetConnectedTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketCloseForciblyTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketCloseForciblyTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketCloseForciblyTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketCloseForciblyTest.java
index 7fbf9e715f..33fd3c79e5 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketCloseForciblyTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketCloseForciblyTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketConnectTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketConnectTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketConnectTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketConnectTest.java
index 7af51faaf6..b65001193d 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketConnectTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketConnectTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketConnectionAttemptTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketConnectionAttemptTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketConnectionAttemptTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketConnectionAttemptTest.java
index e2f3201537..d4cf7e3bbe 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketConnectionAttemptTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketConnectionAttemptTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketEchoTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketEchoTest.java
index 79c87774ee..49f01416c0 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketFileRegionTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketFileRegionTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketFileRegionTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketFileRegionTest.java
index 22eac4fdff..0b6b74b080 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketFileRegionTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketFileRegionTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketFixedLengthEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketFixedLengthEchoTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketFixedLengthEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketFixedLengthEchoTest.java
index f9cfe1f047..4f11a1c446 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketFixedLengthEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketFixedLengthEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketGatheringWriteTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketGatheringWriteTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketGatheringWriteTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketGatheringWriteTest.java
index ea7cd0e5d2..e59c2139f9 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketGatheringWriteTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketGatheringWriteTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketMultipleConnectTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketMultipleConnectTest.java
similarity index 97%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketMultipleConnectTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketMultipleConnectTest.java
index dfad86ba86..7cb1e0064b 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketMultipleConnectTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketMultipleConnectTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketObjectEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketObjectEchoTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketObjectEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketObjectEchoTest.java
index 4c9c76c08b..586bcc1492 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketObjectEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketObjectEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketRstTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketRstTest.java
similarity index 90%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketRstTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketRstTest.java
index 6c485ab2dd..30bc6f9640 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketRstTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketRstTest.java
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.channel.Channel;
-import io.netty.channel.unix.Errors;
-import io.netty.channel.unix.Errors.NativeIoException;
+import net.elytrium.netty.transport.fstack.unix.Errors;
+import net.elytrium.netty.transport.fstack.unix.Errors.NativeIoException;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.socket.SocketRstTest;
 
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketShutdownOutputByPeerTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketShutdownOutputByPeerTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketShutdownOutputByPeerTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketShutdownOutputByPeerTest.java
index a4c53f5f13..2ab935f14b 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketShutdownOutputByPeerTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketShutdownOutputByPeerTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.ServerBootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketShutdownOutputBySelfTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketShutdownOutputBySelfTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketShutdownOutputBySelfTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketShutdownOutputBySelfTest.java
index f77e6dbb3c..656a19050b 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketShutdownOutputBySelfTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketShutdownOutputBySelfTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslClientRenegotiateTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslClientRenegotiateTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslClientRenegotiateTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslClientRenegotiateTest.java
index ef6c4f4479..f931615d4c 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslClientRenegotiateTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslClientRenegotiateTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslEchoTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslEchoTest.java
index a75e2b3a52..9e3b907d3b 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslGreetingTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslGreetingTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslGreetingTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslGreetingTest.java
index 25b7835af5..5f66bd37df 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslGreetingTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslGreetingTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslSessionReuseTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslSessionReuseTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslSessionReuseTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslSessionReuseTest.java
index 2cbef4b8c0..b75d0bb6b7 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketSslSessionReuseTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketSslSessionReuseTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketStartTlsTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketStartTlsTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketStartTlsTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketStartTlsTest.java
index 261cefe7df..06fe5d4e05 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketStartTlsTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketStartTlsTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketStringEchoTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketStringEchoTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketStringEchoTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketStringEchoTest.java
index 9d58392604..4bd5431bc8 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketStringEchoTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketStringEchoTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketTest.java
similarity index 90%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketTest.java
index 84a87e92d1..90d5506bad 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketTest.java
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.PeerCredentials;
-import io.netty.channel.unix.tests.SocketTest;
-import io.netty.channel.unix.tests.UnixTestUtils;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.PeerCredentials;
+import net.elytrium.netty.transport.fstack.unix.tests.SocketTest;
+import net.elytrium.netty.transport.fstack.unix.tests.UnixTestUtils;
 import org.junit.jupiter.api.BeforeAll;
 import org.junit.jupiter.api.Test;
 
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTestPermutation.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketTestPermutation.java
similarity index 97%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTestPermutation.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketTestPermutation.java
index 0b7c84dba0..8db1bb7b55 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTestPermutation.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KQueueSocketTestPermutation.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
@@ -25,8 +25,8 @@ import io.netty.channel.socket.InternetProtocolFamily;
 import io.netty.channel.socket.nio.NioDatagramChannel;
 import io.netty.channel.socket.nio.NioServerSocketChannel;
 import io.netty.channel.socket.nio.NioSocketChannel;
-import io.netty.channel.unix.DomainSocketAddress;
-import io.netty.channel.unix.tests.UnixTestUtils;
+import net.elytrium.netty.transport.fstack.unix.DomainSocketAddress;
+import net.elytrium.netty.transport.fstack.unix.tests.UnixTestUtils;
 import io.netty.testsuite.transport.TestsuitePermutation;
 import io.netty.testsuite.transport.TestsuitePermutation.BootstrapFactory;
 import io.netty.testsuite.transport.socket.SocketTestPermutation;
diff --git a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KqueueWriteBeforeRegisteredTest.java b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KqueueWriteBeforeRegisteredTest.java
similarity index 95%
rename from transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KqueueWriteBeforeRegisteredTest.java
rename to transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KqueueWriteBeforeRegisteredTest.java
index 1e7f14ced4..4685131c23 100644
--- a/transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KqueueWriteBeforeRegisteredTest.java
+++ b/transport-native-kqueue/src/test/java/net/elytrium/netty/transport/fstack/kqueue/KqueueWriteBeforeRegisteredTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.kqueue;
+package net.elytrium.netty.transport.fstack.kqueue;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.testsuite.transport.TestsuitePermutation;
diff --git a/transport-native-unix-common-tests/pom.xml b/transport-native-unix-common-tests/pom.xml
index 227f993f13..a7a876ae0e 100644
--- a/transport-native-unix-common-tests/pom.xml
+++ b/transport-native-unix-common-tests/pom.xml
@@ -17,20 +17,20 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
-    <groupId>io.netty</groupId>
-    <artifactId>netty-parent</artifactId>
+    <groupId>net.elytrium.fstack-netty-transport</groupId>
+    <artifactId>parent</artifactId>
     <version>4.1.77.Final-SNAPSHOT</version>
   </parent>
   <artifactId>netty-transport-native-unix-common-tests</artifactId>
 
-  <name>Netty/Transport/Native/Unix/Common/Tests</name>
+  <name>Netty/Transport/Native/F-Stack-Unix/Common/Tests</name>
   <packaging>jar</packaging>
   <description>
     Tests for the static library which contains common unix utilities.
   </description>
 
   <properties>
-    <javaModuleName>io.netty.transport_native_unix_common_tests</javaModuleName>
+    <javaModuleName>net.elytrium.fstack-netty-transport.transport_native_unix_common_tests</javaModuleName>
   </properties>
 
   <dependencies>
diff --git a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/DetectPeerCloseWithoutReadTest.java b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/DetectPeerCloseWithoutReadTest.java
similarity index 99%
rename from transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/DetectPeerCloseWithoutReadTest.java
rename to transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/DetectPeerCloseWithoutReadTest.java
index f6aef2d2a6..a0f9316137 100644
--- a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/DetectPeerCloseWithoutReadTest.java
+++ b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/DetectPeerCloseWithoutReadTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix.tests;
+package net.elytrium.netty.transport.fstack.unix.tests;
 
 import io.netty.bootstrap.Bootstrap;
 import io.netty.bootstrap.ServerBootstrap;
diff --git a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/IovArrayTest.java b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/IovArrayTest.java
similarity index 97%
rename from transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/IovArrayTest.java
rename to transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/IovArrayTest.java
index 2dd711dd27..797e27dca4 100644
--- a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/IovArrayTest.java
+++ b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/IovArrayTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix.tests;
+package net.elytrium.netty.transport.fstack.unix.tests;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.Unpooled;
diff --git a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/SocketTest.java b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/SocketTest.java
similarity index 98%
rename from transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/SocketTest.java
rename to transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/SocketTest.java
index 115ab35395..d54b373dfb 100644
--- a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/SocketTest.java
+++ b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/SocketTest.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix.tests;
+package net.elytrium.netty.transport.fstack.unix.tests;
 
 import io.netty.channel.unix.Buffer;
 import io.netty.channel.unix.Socket;
diff --git a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixTestUtils.java b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/UnixTestUtils.java
similarity index 98%
rename from transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixTestUtils.java
rename to transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/UnixTestUtils.java
index 3453c236bc..08aaf4ecd4 100644
--- a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/UnixTestUtils.java
+++ b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/UnixTestUtils.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix.tests;
+package net.elytrium.netty.transport.fstack.unix.tests;
 
 import io.netty.channel.unix.DomainSocketAddress;
 import io.netty.util.internal.PlatformDependent;
diff --git a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/package-info.java b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/package-info.java
similarity index 92%
rename from transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/package-info.java
rename to transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/package-info.java
index cda48b0405..df0d8fb22a 100644
--- a/transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/package-info.java
+++ b/transport-native-unix-common-tests/src/main/java/net/elytrium/netty/transport/fstack/unix/tests/package-info.java
@@ -17,4 +17,4 @@
 /**
  * Unix specific transport tests.
  */
-package io.netty.channel.unix.tests;
+package net.elytrium.netty.transport.fstack.unix.tests;
diff --git a/transport-native-unix-common/pom.xml b/transport-native-unix-common/pom.xml
index e1733b41ba..0fb1c63987 100644
--- a/transport-native-unix-common/pom.xml
+++ b/transport-native-unix-common/pom.xml
@@ -17,20 +17,20 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
-    <groupId>io.netty</groupId>
-    <artifactId>netty-parent</artifactId>
+    <groupId>net.elytrium.fstack-netty-transport</groupId>
+    <artifactId>parent</artifactId>
     <version>4.1.77.Final-SNAPSHOT</version>
   </parent>
   <artifactId>netty-transport-native-unix-common</artifactId>
 
-  <name>Netty/Transport/Native/Unix/Common</name>
+  <name>Netty/Transport/Native/F-Stack-Unix/Common</name>
   <packaging>jar</packaging>
   <description>
     Static library which contains common unix utilities.
   </description>
 
   <properties>
-    <javaModuleName>io.netty.transport.unix.common</javaModuleName>
+    <javaModuleName>net.elytrium.fstack-netty-transport.unix.common</javaModuleName>
 
     <exe.make>make</exe.make>
     <exe.compiler>gcc</exe.compiler>
diff --git a/transport-native-unix-common/src/main/c/netty_unix_buffer.c b/transport-native-unix-common/src/main/c/netty_unix_buffer.c
index 9f957eb36a..834d4a5c62 100644
--- a/transport-native-unix-common/src/main/c/netty_unix_buffer.c
+++ b/transport-native-unix-common/src/main/c/netty_unix_buffer.c
@@ -18,7 +18,7 @@
 #include "netty_unix_buffer.h"
 #include "netty_jni_util.h"
 
-#define BUFFER_CLASSNAME "io/netty/channel/unix/Buffer"
+#define BUFFER_CLASSNAME "net/elytrium/netty/transport/fstack/unix/Buffer"
 
 // JNI Registered Methods Begin
 static jlong netty_unix_buffer_memoryAddress0(JNIEnv* env, jclass clazz, jobject buffer) {
diff --git a/transport-native-unix-common/src/main/c/netty_unix_errors.c b/transport-native-unix-common/src/main/c/netty_unix_errors.c
index 73d77411c8..8bb9c8e447 100644
--- a/transport-native-unix-common/src/main/c/netty_unix_errors.c
+++ b/transport-native-unix-common/src/main/c/netty_unix_errors.c
@@ -22,7 +22,7 @@
 #include "netty_unix_util.h"
 #include "netty_jni_util.h"
 
-#define ERRORS_CLASSNAME "io/netty/channel/unix/ErrorsStaticallyReferencedJniMethods"
+#define ERRORS_CLASSNAME "net/elytrium/netty/transport/fstack/unix/ErrorsStaticallyReferencedJniMethods"
 
 static jclass oomErrorClass = NULL;
 static jclass runtimeExceptionClass = NULL;
diff --git a/transport-native-unix-common/src/main/c/netty_unix_filedescriptor.c b/transport-native-unix-common/src/main/c/netty_unix_filedescriptor.c
index a626e4d155..729f2ea554 100644
--- a/transport-native-unix-common/src/main/c/netty_unix_filedescriptor.c
+++ b/transport-native-unix-common/src/main/c/netty_unix_filedescriptor.c
@@ -27,7 +27,7 @@
 #include "netty_unix_util.h"
 #include "netty_jni_util.h"
 
-#define FILEDESCRIPTOR_CLASSNAME "io/netty/channel/unix/FileDescriptor"
+#define FILEDESCRIPTOR_CLASSNAME "net/elytrium/netty/transport/fstack/unix/FileDescriptor"
 
 static jmethodID posId = NULL;
 static jmethodID limitId = NULL;
diff --git a/transport-native-unix-common/src/main/c/netty_unix_limits.c b/transport-native-unix-common/src/main/c/netty_unix_limits.c
index ae0e63b374..4d754ef3ab 100644
--- a/transport-native-unix-common/src/main/c/netty_unix_limits.c
+++ b/transport-native-unix-common/src/main/c/netty_unix_limits.c
@@ -22,7 +22,7 @@
 #include "netty_unix_util.h"
 #include "netty_jni_util.h"
 
-#define LIMITS_CLASSNAME "io/netty/channel/unix/LimitsStaticallyReferencedJniMethods"
+#define LIMITS_CLASSNAME "net/elytrium/netty/transport/fstack/unix/LimitsStaticallyReferencedJniMethods"
 
 // Define IOV_MAX if not found to limit the iov size on writev calls
 // See https://github.com/netty/netty/issues/2647
diff --git a/transport-native-unix-common/src/main/c/netty_unix_socket.c b/transport-native-unix-common/src/main/c/netty_unix_socket.c
index 8641a09e1e..69f57d7101 100644
--- a/transport-native-unix-common/src/main/c/netty_unix_socket.c
+++ b/transport-native-unix-common/src/main/c/netty_unix_socket.c
@@ -32,7 +32,7 @@
 #include "netty_unix_util.h"
 #include "netty_jni_util.h"
 
-#define SOCKET_CLASSNAME "io/netty/channel/unix/Socket"
+#define SOCKET_CLASSNAME "net/elytrium/netty/transport/fstack/unix/Socket"
 // Define SO_REUSEPORT if not found to fix build issues.
 // See https://github.com/netty/netty/issues/2558
 #ifndef SO_REUSEPORT
@@ -1166,28 +1166,28 @@ static JNINativeMethod* createDynamicMethodsTable(const char* packagePrefix) {
     memcpy(dynamicMethods, fixed_method_table, sizeof(fixed_method_table));
 
     JNINativeMethod* dynamicMethod = &dynamicMethods[fixed_method_table_size];
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/DatagramSocketAddress;", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/DatagramSocketAddress;", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(ILjava/nio/ByteBuffer;II)L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "recvFrom";
     dynamicMethod->fnPtr = (void *) netty_unix_socket_recvFrom;
     netty_jni_util_free_dynamic_name(&dynamicTypeName);
 
     ++dynamicMethod;
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/DatagramSocketAddress;", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/DatagramSocketAddress;", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(IJII)L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "recvFromAddress";
     dynamicMethod->fnPtr = (void *) netty_unix_socket_recvFromAddress;
     netty_jni_util_free_dynamic_name(&dynamicTypeName);
 
     ++dynamicMethod;
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/DomainDatagramSocketAddress;", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/DomainDatagramSocketAddress;", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(ILjava/nio/ByteBuffer;II)L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "recvFromDomainSocket";
     dynamicMethod->fnPtr = (void *) netty_unix_socket_recvFromDomainSocket;
     netty_jni_util_free_dynamic_name(&dynamicTypeName);
 
     ++dynamicMethod;
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/DomainDatagramSocketAddress;", dynamicTypeName, error);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/DomainDatagramSocketAddress;", dynamicTypeName, error);
     NETTY_JNI_UTIL_PREPEND("(IJII)L", dynamicTypeName,  dynamicMethod->signature, error);
     dynamicMethod->name = "recvFromAddressDomainSocket";
     dynamicMethod->fnPtr = (void *) netty_unix_socket_recvFromAddressDomainSocket;
@@ -1220,7 +1220,7 @@ jint netty_unix_socket_JNI_OnLoad(JNIEnv* env, const char* packagePrefix) {
         goto done;
     }
   
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/DatagramSocketAddress", nettyClassName, done);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/DatagramSocketAddress", nettyClassName, done);
     NETTY_JNI_UTIL_LOAD_CLASS(env, datagramSocketAddressClass, nettyClassName, done);
 
     // Respect shading...
@@ -1229,7 +1229,7 @@ jint netty_unix_socket_JNI_OnLoad(JNIEnv* env, const char* packagePrefix) {
     netty_jni_util_free_dynamic_name(&nettyClassName);
     NETTY_JNI_UTIL_GET_METHOD(env, datagramSocketAddressClass, datagramSocketAddrMethodId, "<init>", parameters, done);
 
-    NETTY_JNI_UTIL_PREPEND(packagePrefix, "io/netty/channel/unix/DomainDatagramSocketAddress", nettyClassName, done);
+    NETTY_JNI_UTIL_PREPEND(packagePrefix, "net/elytrium/netty/transport/fstack/unix/DomainDatagramSocketAddress", nettyClassName, done);
     NETTY_JNI_UTIL_LOAD_CLASS(env, domainDatagramSocketAddressClass, nettyClassName, done);
 
     char parameters1[1024] = {0};
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Buffer.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Buffer.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/Buffer.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Buffer.java
index 6a177a9630..30dc99055b 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Buffer.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Buffer.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.util.internal.PlatformDependent;
 import io.netty.util.internal.UnstableApi;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DatagramSocketAddress.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DatagramSocketAddress.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DatagramSocketAddress.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DatagramSocketAddress.java
index 523bbce127..650aef2088 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DatagramSocketAddress.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DatagramSocketAddress.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import java.net.Inet6Address;
 import java.net.InetAddress;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannel.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramChannel.java
similarity index 96%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannel.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramChannel.java
index a26ef95d23..7a0503e302 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannel.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.channel.Channel;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannelConfig.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramChannelConfig.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannelConfig.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramChannelConfig.java
index 68b1a97de7..be1a8f049a 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannelConfig.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelConfig;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramPacket.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramPacket.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramPacket.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramPacket.java
index 39a1cd3570..b88e60b45e 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramPacket.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramPacket.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufHolder;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramSocketAddress.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramSocketAddress.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramSocketAddress.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramSocketAddress.java
index b67c6701e1..2488decc58 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramSocketAddress.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainDatagramSocketAddress.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.util.CharsetUtil;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketAddress.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketAddress.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketAddress.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketAddress.java
index c73dba47c6..49f44d060f 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketAddress.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketAddress.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.util.internal.ObjectUtil;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketChannel.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketChannel.java
similarity index 95%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketChannel.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketChannel.java
index 97bebaafd7..94ae481594 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketChannel.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.channel.socket.DuplexChannel;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketChannelConfig.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketChannelConfig.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketChannelConfig.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketChannelConfig.java
index 56696deeae..02b0d8cfe8 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketChannelConfig.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketChannelConfig.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.channel.ChannelConfig;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketReadMode.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketReadMode.java
similarity index 95%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketReadMode.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketReadMode.java
index 60d2680062..dba7c1fc2c 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketReadMode.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/DomainSocketReadMode.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Errors.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Errors.java
similarity index 84%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/Errors.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Errors.java
index b1012175d6..59afbd2bc7 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Errors.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Errors.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.util.internal.EmptyArrays;
 
@@ -26,19 +26,19 @@ import java.nio.channels.ClosedChannelException;
 import java.nio.channels.ConnectionPendingException;
 import java.nio.channels.NotYetConnectedException;
 
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoEAGAIN;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoEBADF;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoECONNRESET;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoEINPROGRESS;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoENOENT;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoENOTCONN;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoEPIPE;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errnoEWOULDBLOCK;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errorEALREADY;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errorECONNREFUSED;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errorEISCONN;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.errorENETUNREACH;
-import static io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods.strError;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoEAGAIN;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoEBADF;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoECONNRESET;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoEINPROGRESS;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoENOENT;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoENOTCONN;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoEPIPE;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errnoEWOULDBLOCK;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errorEALREADY;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errorECONNREFUSED;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errorEISCONN;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.errorENETUNREACH;
+import static net.elytrium.netty.transport.fstack.unix.ErrorsStaticallyReferencedJniMethods.strError;
 
 /**
  * <strong>Internal usage only!</strong>
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/ErrorsStaticallyReferencedJniMethods.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/ErrorsStaticallyReferencedJniMethods.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/ErrorsStaticallyReferencedJniMethods.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/ErrorsStaticallyReferencedJniMethods.java
index 972deb4f61..562000b08a 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/ErrorsStaticallyReferencedJniMethods.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/ErrorsStaticallyReferencedJniMethods.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 /**
  * This class is necessary to break the following cyclic dependency:
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/FileDescriptor.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/FileDescriptor.java
similarity index 96%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/FileDescriptor.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/FileDescriptor.java
index e397aa3fae..9688c9afad 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/FileDescriptor.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/FileDescriptor.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 
 import java.io.File;
@@ -21,9 +21,9 @@ import java.io.IOException;
 import java.nio.ByteBuffer;
 import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
 
-import static io.netty.channel.unix.Errors.ioResult;
-import static io.netty.channel.unix.Errors.newIOException;
-import static io.netty.channel.unix.Limits.IOV_MAX;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ioResult;
+import static net.elytrium.netty.transport.fstack.unix.Errors.newIOException;
+import static net.elytrium.netty.transport.fstack.unix.Limits.IOV_MAX;
 import static io.netty.util.internal.ObjectUtil.checkNotNull;
 import static io.netty.util.internal.ObjectUtil.checkPositiveOrZero;
 import static java.lang.Math.min;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/GenericUnixChannelOption.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/GenericUnixChannelOption.java
similarity index 96%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/GenericUnixChannelOption.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/GenericUnixChannelOption.java
index 6c3f6f9cd1..276c54a02e 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/GenericUnixChannelOption.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/GenericUnixChannelOption.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 /**
  * A generic socket option. See <a href="https://linux.die.net/man/2/setsockopt">man setsockopt</a>.
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/IntegerUnixChannelOption.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/IntegerUnixChannelOption.java
similarity index 95%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/IntegerUnixChannelOption.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/IntegerUnixChannelOption.java
index bfc61836d2..08de367ce4 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/IntegerUnixChannelOption.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/IntegerUnixChannelOption.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 /**
  * A {@link GenericUnixChannelOption} which uses an {@link Integer} as {@code optval}.
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/IovArray.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/IovArray.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/IovArray.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/IovArray.java
index 6071cccc9f..5578a0cb53 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/IovArray.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/IovArray.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.Unpooled;
@@ -23,8 +23,8 @@ import io.netty.util.internal.PlatformDependent;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 
-import static io.netty.channel.unix.Limits.IOV_MAX;
-import static io.netty.channel.unix.Limits.SSIZE_MAX;
+import static net.elytrium.netty.transport.fstack.unix.Limits.IOV_MAX;
+import static net.elytrium.netty.transport.fstack.unix.Limits.SSIZE_MAX;
 import static io.netty.util.internal.ObjectUtil.checkPositive;
 import static java.lang.Math.min;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Limits.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Limits.java
similarity index 66%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/Limits.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Limits.java
index 606c829c0a..8263569372 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Limits.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Limits.java
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
-import static io.netty.channel.unix.LimitsStaticallyReferencedJniMethods.iovMax;
-import static io.netty.channel.unix.LimitsStaticallyReferencedJniMethods.sizeOfjlong;
-import static io.netty.channel.unix.LimitsStaticallyReferencedJniMethods.ssizeMax;
-import static io.netty.channel.unix.LimitsStaticallyReferencedJniMethods.uioMaxIov;
+import static net.elytrium.netty.transport.fstack.unix.LimitsStaticallyReferencedJniMethods.iovMax;
+import static net.elytrium.netty.transport.fstack.unix.LimitsStaticallyReferencedJniMethods.sizeOfjlong;
+import static net.elytrium.netty.transport.fstack.unix.LimitsStaticallyReferencedJniMethods.ssizeMax;
+import static net.elytrium.netty.transport.fstack.unix.LimitsStaticallyReferencedJniMethods.uioMaxIov;
 
 public final class Limits {
     public static final int IOV_MAX = iovMax();
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/LimitsStaticallyReferencedJniMethods.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/LimitsStaticallyReferencedJniMethods.java
similarity index 96%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/LimitsStaticallyReferencedJniMethods.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/LimitsStaticallyReferencedJniMethods.java
index 5480eea5bb..190973c69d 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/LimitsStaticallyReferencedJniMethods.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/LimitsStaticallyReferencedJniMethods.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 /**
  * This class is necessary to break the following cyclic dependency:
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/NativeInetAddress.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/NativeInetAddress.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/NativeInetAddress.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/NativeInetAddress.java
index d4c6904817..36f78e208f 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/NativeInetAddress.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/NativeInetAddress.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import java.net.Inet6Address;
 import java.net.InetAddress;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/PeerCredentials.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/PeerCredentials.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/PeerCredentials.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/PeerCredentials.java
index f05e92aee0..3d2982455c 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/PeerCredentials.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/PeerCredentials.java
@@ -14,7 +14,7 @@
  * under the License.
  */
 
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.util.internal.UnstableApi;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/PreferredDirectByteBufAllocator.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/PreferredDirectByteBufAllocator.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/PreferredDirectByteBufAllocator.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/PreferredDirectByteBufAllocator.java
index 41b2997b76..2e3b1b1d0e 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/PreferredDirectByteBufAllocator.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/PreferredDirectByteBufAllocator.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/RawUnixChannelOption.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/RawUnixChannelOption.java
similarity index 97%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/RawUnixChannelOption.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/RawUnixChannelOption.java
index 1ba237d943..066fd94351 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/RawUnixChannelOption.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/RawUnixChannelOption.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 
 import io.netty.util.internal.ObjectUtil;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/SegmentedDatagramPacket.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/SegmentedDatagramPacket.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/SegmentedDatagramPacket.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/SegmentedDatagramPacket.java
index 01f21ce994..2545410f8b 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/SegmentedDatagramPacket.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/SegmentedDatagramPacket.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.channel.socket.DatagramPacket;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/ServerDomainSocketChannel.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/ServerDomainSocketChannel.java
similarity index 95%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/ServerDomainSocketChannel.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/ServerDomainSocketChannel.java
index 78b5c48d66..5b71330467 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/ServerDomainSocketChannel.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/ServerDomainSocketChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.channel.ServerChannel;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Socket.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Socket.java
similarity index 96%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/Socket.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Socket.java
index 4fb894dc56..e6bde4b849 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Socket.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Socket.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.channel.ChannelException;
 import io.netty.channel.socket.InternetProtocolFamily;
@@ -29,15 +29,15 @@ import java.net.SocketAddress;
 import java.nio.ByteBuffer;
 import java.nio.channels.ClosedChannelException;
 
-import static io.netty.channel.unix.Errors.ERRNO_EAGAIN_NEGATIVE;
-import static io.netty.channel.unix.Errors.ERRNO_EINPROGRESS_NEGATIVE;
-import static io.netty.channel.unix.Errors.ERRNO_EWOULDBLOCK_NEGATIVE;
-import static io.netty.channel.unix.Errors.ERROR_ECONNREFUSED_NEGATIVE;
-import static io.netty.channel.unix.Errors.handleConnectErrno;
-import static io.netty.channel.unix.Errors.ioResult;
-import static io.netty.channel.unix.Errors.newIOException;
-import static io.netty.channel.unix.NativeInetAddress.address;
-import static io.netty.channel.unix.NativeInetAddress.ipv4MappedIpv6Address;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ERRNO_EAGAIN_NEGATIVE;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ERRNO_EINPROGRESS_NEGATIVE;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ERRNO_EWOULDBLOCK_NEGATIVE;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ERROR_ECONNREFUSED_NEGATIVE;
+import static net.elytrium.netty.transport.fstack.unix.Errors.handleConnectErrno;
+import static net.elytrium.netty.transport.fstack.unix.Errors.ioResult;
+import static net.elytrium.netty.transport.fstack.unix.Errors.newIOException;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.address;
+import static net.elytrium.netty.transport.fstack.unix.NativeInetAddress.ipv4MappedIpv6Address;
 
 /**
  * Provides a JNI bridge to native socket operations.
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/SocketWritableByteChannel.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/SocketWritableByteChannel.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/SocketWritableByteChannel.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/SocketWritableByteChannel.java
index 903ee1319f..9d4118ba45 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/SocketWritableByteChannel.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/SocketWritableByteChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBufAllocator;
 import io.netty.util.internal.ObjectUtil;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Unix.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Unix.java
similarity index 98%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/Unix.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Unix.java
index e1fbb13b62..7bec765469 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/Unix.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/Unix.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.util.internal.ClassInitializerUtil;
 import io.netty.util.internal.UnstableApi;
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannel.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannel.java
similarity index 94%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannel.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannel.java
index 6119918c4a..110d78b261 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannel.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannel.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.channel.Channel;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelOption.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannelOption.java
similarity index 96%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelOption.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannelOption.java
index 2249ae102a..b7217150d5 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelOption.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannelOption.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.channel.ChannelOption;
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelUtil.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannelUtil.java
similarity index 95%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelUtil.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannelUtil.java
index ada5111b0b..4a46f91159 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/UnixChannelUtil.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/UnixChannelUtil.java
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations
  * under the License.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.util.internal.PlatformDependent;
@@ -22,7 +22,7 @@ import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.net.UnknownHostException;
 
-import static io.netty.channel.unix.Limits.IOV_MAX;
+import static net.elytrium.netty.transport.fstack.unix.Limits.IOV_MAX;
 
 public final class UnixChannelUtil {
 
diff --git a/transport-native-unix-common/src/main/java/io/netty/channel/unix/package-info.java b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/package-info.java
similarity index 93%
rename from transport-native-unix-common/src/main/java/io/netty/channel/unix/package-info.java
rename to transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/package-info.java
index e2cc3c45da..9e0cc8968a 100644
--- a/transport-native-unix-common/src/main/java/io/netty/channel/unix/package-info.java
+++ b/transport-native-unix-common/src/main/java/net/elytrium/netty/transport/fstack/unix/package-info.java
@@ -17,4 +17,4 @@
 /**
  * Unix specific transport.
  */
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
diff --git a/transport-native-unix-common/src/test/java/io/netty/channel/unix/UnixChannelUtilTest.java b/transport-native-unix-common/src/test/java/net/elytrium/netty/transport/fstack/unix/UnixChannelUtilTest.java
similarity index 95%
rename from transport-native-unix-common/src/test/java/io/netty/channel/unix/UnixChannelUtilTest.java
rename to transport-native-unix-common/src/test/java/net/elytrium/netty/transport/fstack/unix/UnixChannelUtilTest.java
index 83895ad40f..6ecc5f6c5c 100644
--- a/transport-native-unix-common/src/test/java/io/netty/channel/unix/UnixChannelUtilTest.java
+++ b/transport-native-unix-common/src/test/java/net/elytrium/netty/transport/fstack/unix/UnixChannelUtilTest.java
@@ -14,7 +14,7 @@
  * under the License.
  */
 
-package io.netty.channel.unix;
+package net.elytrium.netty.transport.fstack.unix;
 
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufAllocator;
@@ -27,7 +27,7 @@ import java.util.Collections;
 import java.util.LinkedList;
 import java.util.List;
 
-import static io.netty.channel.unix.UnixChannelUtil.isBufferCopyNeededForWrite;
+import static net.elytrium.netty.transport.fstack.unix.UnixChannelUtil.isBufferCopyNeededForWrite;
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertFalse;
 import static org.junit.jupiter.api.Assertions.assertTrue;
-- 
2.35.0.windows.1

